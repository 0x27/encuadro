/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import proyecto.clases.FileUpload;
import proyecto.clases.Global;
import proyecto.clases.MediaPanelAudio;
import proyecto.clases.prbQT;
import vtk.vtkActor;
import vtk.vtkElevationFilter;
import vtk.vtkNativeLibrary;
import vtk.vtkPLYReader;
import vtk.vtkPolyDataMapper;
import vtk.vtkRenderWindow;
import vtk.vtkRenderWindowInteractor;
import vtk.vtkRenderer;

/**
 *
 * @author SysAdmin
 */
public class agContZi extends javax.swing.JFrame {
    File audio = null,video = null, modelo = null;
    static {
        if (!vtkNativeLibrary.LoadAllNativeLibraries()) {
            for (vtkNativeLibrary lib : vtkNativeLibrary.values()) {
                if (!lib.IsLoaded()) {
                    System.out.println(lib.GetLibraryName() + " not loaded");
                }
            }
        }
        vtkNativeLibrary.DisableOutputWindow(null);
    }
    /**
     * Creates new form agContZi
     */
    public agContZi() {
        Image ico = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(ico);
        initComponents();
        this.setLocationRelativeTo(null);
        chk_audio.setEnabled(false);
        chk_modelo.setEnabled(false);
        chk_texto.setEnabled(false);
        chk_video.setEnabled(false);
        ver_audio.setEnabled(false);
        ver_modelo.setEnabled(false);
        ver_video.setEnabled(false);
        ver_texto.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        botAceptar = new javax.swing.JButton();
        botCancelar = new javax.swing.JButton();
        lbl_titulo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chk_modelo = new javax.swing.JCheckBox();
        ver_modelo = new javax.swing.JButton();
        chk_audio = new javax.swing.JCheckBox();
        ver_audio = new javax.swing.JButton();
        chk_video = new javax.swing.JCheckBox();
        ver_video = new javax.swing.JButton();
        chk_texto = new javax.swing.JCheckBox();
        ver_texto = new javax.swing.JButton();
        botVideo = new javax.swing.JButton();
        botAudio = new javax.swing.JButton();
        botTexto = new javax.swing.JButton();
        botModelo3D = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Zona de Interés");
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("3 - Agregue los contenidos para la Zona definida:");

        botAceptar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        botAceptar.setText("Guardar");
        botAceptar.setToolTipText("Guardar los cambios realizados");
        botAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAceptarActionPerformed(evt);
            }
        });

        botCancelar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        botCancelar.setText("Cancelar");
        botCancelar.setToolTipText("Descartar los cambios y cerrar");
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        lbl_titulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_titulo.setText("Agregar Zona de Interés (3 de 3)");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contenidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N

        chk_modelo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chk_modelo.setText("Modelo 3D");
        chk_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_modeloActionPerformed(evt);
            }
        });

        ver_modelo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_modelo.setText("Ver");
        ver_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_modeloActionPerformed(evt);
            }
        });

        chk_audio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chk_audio.setText("Audio");
        chk_audio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_audioActionPerformed(evt);
            }
        });

        ver_audio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_audio.setText("Ver");
        ver_audio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_audioActionPerformed(evt);
            }
        });

        chk_video.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chk_video.setText("Video");
        chk_video.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_videoActionPerformed(evt);
            }
        });

        ver_video.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_video.setText("Ver");
        ver_video.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_videoActionPerformed(evt);
            }
        });

        chk_texto.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chk_texto.setText("Texto");
        chk_texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_textoActionPerformed(evt);
            }
        });

        ver_texto.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_texto.setText("Ver");
        ver_texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_textoActionPerformed(evt);
            }
        });

        botVideo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        botVideo.setText("Modificar");
        botVideo.setToolTipText("Agregar/cambiar el archivo asociado");
        botVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botVideoActionPerformed(evt);
            }
        });

        botAudio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        botAudio.setText("Modificar");
        botAudio.setToolTipText("Agregar/cambiar el archivo asociado");
        botAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAudioActionPerformed(evt);
            }
        });

        botTexto.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        botTexto.setText("Modificar");
        botTexto.setToolTipText("Agregar/cambiar el archivo asociado");
        botTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botTextoActionPerformed(evt);
            }
        });

        botModelo3D.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        botModelo3D.setText("Modificar");
        botModelo3D.setToolTipText("Agregar/cambiar el archivo asociado");
        botModelo3D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botModelo3DActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chk_video, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chk_audio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chk_modelo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chk_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ver_modelo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ver_audio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ver_video, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botModelo3D)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ver_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botTexto)))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chk_video, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botVideo)
                        .addComponent(ver_video)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_audio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botAudio)
                    .addComponent(ver_audio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ver_modelo)
                    .addComponent(botModelo3D))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ver_texto)
                    .addComponent(botTexto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(botAceptar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(botCancelar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botCancelar)
                    .addComponent(botAceptar))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botVideoActionPerformed
        // TODO add your handling code here:
        //MediaPanel mediaPanel = null;
        
        if(Global.video == false){
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("MOV","mov");
            JFileChooser exam = new JFileChooser();
            exam.setDialogTitle("Ubicación del archivo resultante.");
            exam.setFileFilter(filtro);
            int returnVal = exam.showOpenDialog(null);
            
            if(returnVal == JFileChooser.APPROVE_OPTION){
                video = exam.getSelectedFile();
                Global.video = true;
                Global.fvid = video ;
                
                boolean ñ = true;
                    String[] aC;
                    String Nombres = video.getName(); 
                    int f =  Nombres.length();
                    aC = Nombres.split("");
                    for(int i = 0; i<=f; i++){
                        if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i])|| " ".equals(aC[i])){
                            JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
                            ñ = false;
                            i = f;
                            chk_video.setSelected(false);
                            chk_video.setEnabled(false);
                            ver_video.setEnabled(false);
                        }
                    }
                    if(ñ==true){
                
                if ( Global.fvid != null ){
                    prbQT frame = new prbQT(video.getName()); 
                    frame.pack(); 
                    frame.setVisible(true); 
                    
                    try { 
                        frame.movie.start(); 
                    } catch (Exception e) { 
                        e.printStackTrace(); 
                    } 
                }else {
                    JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
                }
                
                chk_video.setSelected(true);
                chk_video.setEnabled(true);
                ver_video.setEnabled(true);
            }}
        }else{
            JOptionPane.showMessageDialog(rootPane, "Se sustituirá el video ya ingresado.");
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("MOV","mov");
            JFileChooser exam = new JFileChooser();
            exam.setDialogTitle("Ubicación del archivo resultante.");
            exam.setFileFilter(filtro);
            int returnVal = exam.showOpenDialog(null);
            if(returnVal == JFileChooser.APPROVE_OPTION){
                video = exam.getSelectedFile();
                Global.video = true;
                boolean ñ = true;
                    String[] aC;
                    String Nombres = video.getName(); 
                    int f =  Nombres.length();
                    aC = Nombres.split("");
                    for(int i = 0; i<=f; i++){
                        if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i])|| "".equals(aC[i])){
                            JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
                            ñ = false;
                            i = f;
                            chk_video.setSelected(false);
                            chk_video.setEnabled(false);
                            ver_video.setEnabled(false);
                        }
                    }
                    if(ñ==true){
                
                URL mediaURL = null;
                try{
                    mediaURL = video.toURL();
                }
                catch ( MalformedURLException malformedURLException ){
                    System.err.println( "No se pudo crear la URL" );
                }
                
                if ( mediaURL != null ){
                 //  repAudioyVideo   repAudVi = new repAudioyVideo(video.getPath());
                }else{
                    JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
                }
                
                chk_video.setSelected(true);
                chk_video.setEnabled(true);
                ver_video.setEnabled(true);
            }}
        }
        
        
    }//GEN-LAST:event_botVideoActionPerformed

    private void botAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAudioActionPerformed
        // TODO add your handling code here:
        MediaPanelAudio mediaPanel = null;
        
        if(Global.audio == false){
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("MP3","mp3");
            JFileChooser exam = new JFileChooser();
            exam.setDialogTitle("Ubicación del archivo resultante.");
            exam.setFileFilter(filtro);
            int returnVal = exam.showOpenDialog(null);
            
            if(returnVal == JFileChooser.APPROVE_OPTION){
                audio = exam.getSelectedFile();
                Global.audio = true;
                
                boolean ñ = true;
                    String[] aC;
                    String Nombres = audio.getName(); 
                    int f =  Nombres.length();
                    aC = Nombres.split("");
                    for(int i = 0; i<=f; i++){
                        if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i])|| " ".equals(aC[i])){
                            JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
                            ñ = false;
                            i = f;
                            chk_audio.setSelected(false);
                            chk_audio.setEnabled(false);
                            ver_audio.setEnabled(false);
                            
                        }
                    }
                    if(ñ==true){
                
                
                
                URL mediaURL = null;
                
                try{
                    // tomar la URL
                    mediaURL = audio.toURL();
                }catch ( MalformedURLException malformedURLException ){
                    System.err.println( "No se pudo crear la URL" );
                }
                
                if ( mediaURL != null ){
                    mediaPanel = new MediaPanelAudio( mediaURL );
                }else{
                    JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
                }
                
                chk_audio.setSelected(true);
                chk_audio.setEnabled(true);
                ver_audio.setEnabled(true);
            }}
        }else{
            JOptionPane.showMessageDialog(rootPane, "Se sustituirá el audio ya ingresado.");
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("MP3","mp3");
            JFileChooser exam = new JFileChooser();
            exam.setDialogTitle("Ubicación del archivo resultante.");
            exam.setFileFilter(filtro);
            int returnVal = exam.showOpenDialog(null);
            
            if(returnVal == JFileChooser.APPROVE_OPTION){
                audio = exam.getSelectedFile();
                Global.audio = true;
                boolean ñ = true;
                    String[] aC;
                    String Nombres = audio.getName(); 
                    int f =  Nombres.length();
                    aC = Nombres.split("");
                    for(int i = 0; i<=f; i++){
                        if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i])|| "".equals(aC[i])){
                            JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
                            ñ = false;
                            i = f;
                            chk_audio.setSelected(false);
                            chk_audio.setEnabled(false);
                            ver_audio.setEnabled(false);
                        }
                    }
                    if(ñ==true){
                
                URL mediaURL = null;
                try{
                    // tomar la URL
                    mediaURL = audio.toURL();
                }catch ( MalformedURLException malformedURLException ){
                    System.err.println( "No se pudo crear la URL" );
                }
                
                if ( mediaURL != null ){
                    mediaPanel = new MediaPanelAudio( mediaURL );
                }else {
                    JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
                }
                
                chk_audio.setSelected(true);
                chk_audio.setEnabled(true);
                ver_audio.setEnabled(true);
            }}
        }
    }//GEN-LAST:event_botAudioActionPerformed

    private void botTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botTextoActionPerformed
        // TODO add your handling code here:
        IngresarTexto2 it2 = new IngresarTexto2(chk_texto, ver_texto);
        it2.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_botTextoActionPerformed

    private void botModelo3DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botModelo3DActionPerformed
        // TODO add your handling code here:
        if(Global.modelo3D == false){
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("PLY","ply");
            JFileChooser exam = new JFileChooser();
            exam.setDialogTitle("Ubicación del archivo resultante.");
            exam.setFileFilter(filtro);
            int returnVal = exam.showOpenDialog(null);
            if(returnVal == JFileChooser.APPROVE_OPTION){
                modelo = exam.getSelectedFile();
                Global.modelo3D = true;
                
                boolean ñ = true;
                    String[] aC;
                    String Nombres = modelo.getName(); 
                    int f =  Nombres.length();
                    aC = Nombres.split("");
                    for(int i = 0; i<=f; i++){
                        if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i])|| " ".equals(aC[i])){
                            JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
                            ñ = false;
                            i = f;
                            chk_modelo.setSelected(false);
                            chk_modelo.setEnabled(false);
                            ver_modelo.setEnabled(false);
                            
                        }
                    }
                    if(ñ==true){
                
                
                chk_modelo.setSelected(true);
                chk_modelo.setEnabled(true);
                ver_modelo.setEnabled(true);
                vtkRenderer render = new vtkRenderer();
                vtkRenderWindow renderWindow = new vtkRenderWindow();
                renderWindow.AddRenderer(render);
                vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
                renderWindowInteractor.SetRenderWindow(renderWindow);
                vtkPLYReader mod = new vtkPLYReader();
                mod.SetFileName(modelo.getAbsolutePath());
                mod.Update();
                vtkElevationFilter colorIt = new vtkElevationFilter();
                colorIt.SetInput(mod.GetOutput());
                colorIt.SetLowPoint(0, 0, -1);
                colorIt.SetHighPoint(0, 0, 1);
                vtkPolyDataMapper point = new vtkPolyDataMapper();
                point.SetInputConnection(mod.GetOutputPort());
                vtkActor actor = new vtkActor();
                actor.SetMapper(point);
                render.AddActor(actor);
                render.SetBackground(1, 1, 1);
                renderWindow.SetSize(500, 500);
                renderWindow.SetPosition(450, 200);
                renderWindow.Render();
                renderWindowInteractor.Start();
                render.Delete();
                renderWindow.Delete();
                renderWindowInteractor.Delete();
                mod.Delete();
                colorIt.Delete();
                actor.Delete();
            }}else{
                Global.modelo3D = false;
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Se sustituirá el modelo ya ingresado.");
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("PLY","ply");
            JFileChooser exam = new JFileChooser();
            exam.setDialogTitle("Ubicación del archivo resultante.");
            exam.setFileFilter(filtro);
            int returnVal = exam.showOpenDialog(null);
            if(returnVal == JFileChooser.APPROVE_OPTION){
                modelo = exam.getSelectedFile();
                Global.modelo3D = true;
                boolean ñ = true;
                    String[] aC;
                    String Nombres = modelo.getName(); 
                    int f =  Nombres.length();
                    aC = Nombres.split("");
                    for(int i = 0; i<=f; i++){
                        if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i])|| "".equals(aC[i])){
                            JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
                            ñ = false;
                            i = f;
                            chk_modelo.setSelected(false);
                            chk_modelo.setEnabled(false);
                            ver_modelo.setEnabled(false);
                            
                        }
                    }
                    if(ñ==true){
                
                chk_modelo.setSelected(true);
                chk_modelo.setEnabled(true);
                ver_modelo.setEnabled(true);
                
                vtkRenderer render = new vtkRenderer();
                vtkRenderWindow renderWindow = new vtkRenderWindow();
                renderWindow.AddRenderer(render);
                vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
                renderWindowInteractor.SetRenderWindow(renderWindow);
                vtkPLYReader mod = new vtkPLYReader();
                mod.SetFileName(modelo.getAbsolutePath());
                mod.Update();
                vtkElevationFilter colorIt = new vtkElevationFilter();
                colorIt.SetInput(mod.GetOutput());
                colorIt.SetLowPoint(0, 0, -1);
                colorIt.SetHighPoint(0, 0, 1);
                vtkPolyDataMapper point = new vtkPolyDataMapper();
                point.SetInputConnection(mod.GetOutputPort());
                vtkActor actor = new vtkActor();
                actor.SetMapper(point);
                render.AddActor(actor);
                render.SetBackground(1, 1, 1);
                renderWindow.SetSize(500, 500);
                renderWindow.SetPosition(450, 200);
                renderWindow.Render();
                renderWindowInteractor.Start();
                render.Delete();
                renderWindow.Delete();
                renderWindowInteractor.Delete();
                mod.Delete();
                colorIt.Delete();
                actor.Delete();
            }}
        }
    }//GEN-LAST:event_botModelo3DActionPerformed

    private void botAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAceptarActionPerformed
        // TODO add your handling code here:
        String dev = null;
        if(Global.video == false && Global.audio == false && Global.texto == false && Global.modelo3D == false) {
            JOptionPane.
                    
                    
                    showMessageDialog(rootPane, "Debes ingresar al menos un Contenido para la Zona de Interés.", "Error en el formulario", JOptionPane.WARNING_MESSAGE);
        }else{
            int h, w, x, y;
            h = (int) Global.rrr.getHeight();
            w = (int) Global.rrr.getWidth();
            x = (int) Global.rrr.getX();
            y = (int) Global.rrr.getY();
            int idZona = altaZona(h, w, x, y, Global.nomObra);
            
            if(idZona > 0){
                //agregar modelo 3d
                if(Global.modelo3D == true){
                    try {
                        dev = agregarContenidoZona(idZona, "modelo", modelo.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el modelo 3D.\nPor favor inténtalo de nuevo.");    
                            return;
                        }
                        else{
                            System.out.println("modelo: " + dev);
                            FileUpload.upload(dev, modelo);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(agContZi.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(agContZi.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dev = null;
                }

                //agregar texto
                if(Global.texto == true && chk_texto.isSelected()) {
                    agregarContenidoZona(idZona, "texto", Global.stringTexto);
                }

                //agregar audio
                if(Global.audio == true && chk_audio.isSelected()){
                    try { 
                        dev = agregarContenidoZona(idZona, "audio", audio.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el audio.\nPor favor inténtalo de nuevo.");    
                            return;
                        }
                        else{
                            FileUpload.upload(dev, audio);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(agContZi.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(agContZi.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dev = null;
                }

                //agregar video
                if(Global.video == true && chk_video.isSelected()){
                    try { 
                        dev = agregarContenidoZona(idZona, "video", video.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el video.\nPor favor inténtalo de nuevo.");    
                            return;
                        }
                        else{
                            FileUpload.upload(dev, video);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(agContZi.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(agContZi.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            
                if(JOptionPane.showConfirmDialog(rootPane, "La Zona de Interés se creó correctamente.\n¿Deseas agregar otra Zona?") == JOptionPane.YES_OPTION){
                    this.dispose();
                    Global.zii = new ZonaInteresIma("agregar");
                    Global.zii.setVisible(true);
                    Global.zii.setLocationRelativeTo(null);
                    Global.zag = true;
                }else{ //cerrar la ventana
                    Global.zag = false;
                    this.dispose();
                }
                
                Global.texto = false;
                Global.audio = false;
                Global.video = false;
                Global.modelo3D = false;
                Global.stringTexto = null;
                //Global.zag = false;
                audio = null;
                video = null;
                modelo = null;
            }else{
                JOptionPane.showMessageDialog(rootPane, "No fue posible la creación de la Zona de Interés.\nPor favor inténtalo de nuevo.");
            }
        }
    }//GEN-LAST:event_botAceptarActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "Se perderán los cambios no guardados.\n¿Volver a la zona de dibujo?") == JOptionPane.YES_OPTION){
            Global.texto = false;
            Global.audio = false;
            Global.video = false;
            Global.modelo3D = false;
            Global.stringTexto = null;
            Global.zag = false;
            audio = null;
            video = null;
            modelo = null;
            this.dispose();
            Global.zii.setVisible(true);            
        }else{
            if(JOptionPane.showConfirmDialog(rootPane, "¿Deseas agregar otra Zona de Interés?") == JOptionPane.YES_OPTION){
                Global.zag = true;
                this.dispose();
                ZonaInteresSal zis = new ZonaInteresSal("Agregar Zona de Interés");
                zis.setVisible(true);
            }else{
                Global.zag = false;
                this.dispose();
            }
        }
    }//GEN-LAST:event_botCancelarActionPerformed

    private void ver_videoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_videoActionPerformed
        // TODO add your handling code here:
        Global.fvid = video ;

        if ( Global.fvid != null ){
            prbQT frame = new prbQT(video.getName()); 
            frame.pack(); 
            frame.setVisible(true); 

            try { 
                frame.movie.start(); 
            } catch (Exception e) { 
                e.printStackTrace(); 
            } 
        }else {
            JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
        }
    }//GEN-LAST:event_ver_videoActionPerformed

    private void ver_audioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_audioActionPerformed
        // TODO add your handling code here:
        MediaPanelAudio mediaPanel;
        URL mediaURL = null;

        try{
            // tomar la URL
            mediaURL = audio.toURL();
        }catch ( MalformedURLException malformedURLException ){
            System.err.println( "No se pudo crear la URL" );
        }

        if ( mediaURL != null ){
            mediaPanel = new MediaPanelAudio( mediaURL );
        }else{
            JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
        }

    }//GEN-LAST:event_ver_audioActionPerformed

    private void ver_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_modeloActionPerformed
        // TODO add your handling code here:
        vtkRenderer render = new vtkRenderer();
        vtkRenderWindow renderWindow = new vtkRenderWindow();
        renderWindow.AddRenderer(render);
        vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
        renderWindowInteractor.SetRenderWindow(renderWindow);
        vtkPLYReader mod = new vtkPLYReader();
        mod.SetFileName(modelo.getAbsolutePath());
        mod.Update();
        vtkElevationFilter colorIt = new vtkElevationFilter();
        colorIt.SetInput(mod.GetOutput());
        colorIt.SetLowPoint(0, 0, -1);
        colorIt.SetHighPoint(0, 0, 1);
        vtkPolyDataMapper point = new vtkPolyDataMapper();
        point.SetInputConnection(mod.GetOutputPort());
        vtkActor actor = new vtkActor();
        actor.SetMapper(point);
        render.AddActor(actor);
        render.SetBackground(1, 1, 1);
        renderWindow.SetSize(500, 500);
        renderWindow.SetPosition(450, 200);
        renderWindow.Render();
        renderWindowInteractor.Start();
        render.Delete();
        renderWindow.Delete();
        renderWindowInteractor.Delete();
        mod.Delete();
        colorIt.Delete();
        actor.Delete();
    }//GEN-LAST:event_ver_modeloActionPerformed

    private void ver_textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_textoActionPerformed
        // TODO add your handling code here:
        VerTexto verT = new VerTexto();
        verT.setVisible(true);
        this.setVisible(false);        
    }//GEN-LAST:event_ver_textoActionPerformed

    private void chk_videoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_videoActionPerformed
        // TODO add your handling code here:
        chk_video.setSelected(false);
        chk_video.setEnabled(false);
        ver_video.setEnabled(false);
        Global.video = false;
    }//GEN-LAST:event_chk_videoActionPerformed

    private void chk_audioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_audioActionPerformed
        // TODO add your handling code here:
        chk_audio.setSelected(false);
        chk_audio.setEnabled(false);
        ver_audio.setEnabled(false);
        Global.audio = false;
    }//GEN-LAST:event_chk_audioActionPerformed

    private void chk_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_modeloActionPerformed
        // TODO add your handling code here:
        chk_modelo.setSelected(false);
        chk_modelo.setEnabled(false);
        ver_modelo.setEnabled(false);
        Global.modelo3D = false;
    }//GEN-LAST:event_chk_modeloActionPerformed

    private void chk_textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_textoActionPerformed
        // TODO add your handling code here:
        chk_texto.setSelected(false);
        chk_texto.setEnabled(false);
        ver_texto.setEnabled(false);
        Global.texto = false;
    }//GEN-LAST:event_chk_textoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(agContZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(agContZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(agContZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(agContZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new agContZi().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botAceptar;
    private javax.swing.JButton botAudio;
    private javax.swing.JButton botCancelar;
    private javax.swing.JButton botModelo3D;
    private javax.swing.JButton botTexto;
    private javax.swing.JButton botVideo;
    private javax.swing.JCheckBox chk_audio;
    private javax.swing.JCheckBox chk_modelo;
    private javax.swing.JCheckBox chk_texto;
    private javax.swing.JCheckBox chk_video;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JButton ver_audio;
    private javax.swing.JButton ver_modelo;
    private javax.swing.JButton ver_texto;
    private javax.swing.JButton ver_video;
    // End of variables declaration//GEN-END:variables

    

    private static String agregarContenidoZona(int idZona, java.lang.String tipo, java.lang.String nombre) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.agregarContenidoZona(idZona, tipo, nombre);
    }

    private static int altaZona(int largo, int ancho, int x, int y, java.lang.String nombreObra) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.altaZona(largo, ancho, x, y, nombreObra);
    }
    
}
