package proyecto;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import proyecto.clases.FileUpload;
import proyecto.clases.Global;
import proyecto.clases.MediaPanelAudio;
import proyecto.clases.Validador;
import proyecto.clases.prbQT;
import vtk.vtkActor;
import vtk.vtkElevationFilter;
import vtk.vtkNativeLibrary;
import vtk.vtkPLYReader;
import vtk.vtkPolyDataMapper;
import vtk.vtkRenderWindow;
import vtk.vtkRenderWindowInteractor;
import vtk.vtkRenderer;


/**
 *
 * @author SysAdmin
 */
public class Borrar_sala extends javax.swing.JFrame {
    ImagenLabel il = null;
    ProcesandoPeticion prc = new ProcesandoPeticion();
//    static {
//        if (!vtkNativeLibrary.LoadAllNativeLibraries()) {
//            for (vtkNativeLibrary lib : vtkNativeLibrary.values()) {
//                if (!lib.IsLoaded()) {
//                    System.out.println(lib.GetLibraryName() + " not loaded");
//                }
//            }
//        }
//        vtkNativeLibrary.DisableOutputWindow(null);
    //}
    /**
     * Creates new form Borrar_sala
     */
    public Borrar_sala() {
        Image ico = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(ico);
        initComponents();
        prc.setLocationRelativeTo(null);
        this.setLocationRelativeTo(null);  
        ver_audio.setEnabled(false);
        ver_imagen.setEnabled(false);
        ver_modelo.setEnabled(false);
        ver_video.setEnabled(false);
//        Lista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        id_txt = new javax.swing.JTextField();
        bus_btn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nom_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        au_txt = new javax.swing.JTextField();
        ver_audio = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        vi_txt = new javax.swing.JTextField();
        ver_video = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        im_txt = new javax.swing.JTextField();
        ver_imagen = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        mod_txt = new javax.swing.JTextField();
        ver_modelo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        des_txt = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt1_txt = new javax.swing.JTextArea();
        del_btn = new javax.swing.JButton();
        cancelar_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(450, 450));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Borrar Sala");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("ID Sala a borrar:");

        bus_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        bus_btn.setText("Buscar");
        bus_btn.setToolTipText("Realizar búsqueda en el sistema");
        bus_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bus_btnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre:");

        nom_txt.setEditable(false);
        nom_txt.setBackground(new java.awt.Color(255, 255, 255));
        nom_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        nom_txt.setBorder(au_txt.getBorder());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Descripción:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Audio:");

        au_txt.setEditable(false);
        au_txt.setBackground(new java.awt.Color(255, 255, 255));
        au_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        au_txt.setBorder(id_txt.getBorder());

        ver_audio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_audio.setText("Ver");
        ver_audio.setToolTipText("Reproducir el audio asociado");
        ver_audio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_audioActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Video:");
        jLabel5.setPreferredSize(new java.awt.Dimension(31, 14));

        vi_txt.setEditable(false);
        vi_txt.setBackground(new java.awt.Color(255, 255, 255));
        vi_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        vi_txt.setBorder(id_txt.getBorder());

        ver_video.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_video.setText("Ver");
        ver_video.setToolTipText("Reproducir el video asociado");
        ver_video.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_videoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Imagen:");

        im_txt.setEditable(false);
        im_txt.setBackground(new java.awt.Color(255, 255, 255));
        im_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        im_txt.setBorder(id_txt.getBorder());

        ver_imagen.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_imagen.setText("Ver");
        ver_imagen.setToolTipText("Visualizar la imagen asociada");
        ver_imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_imagenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Modelo:");

        mod_txt.setEditable(false);
        mod_txt.setBackground(new java.awt.Color(255, 255, 255));
        mod_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mod_txt.setBorder(id_txt.getBorder());

        ver_modelo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ver_modelo.setText("Ver");
        ver_modelo.setToolTipText("Visualizar el modelo asociado");
        ver_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_modeloActionPerformed(evt);
            }
        });

        des_txt.setEditable(false);
        des_txt.setColumns(20);
        des_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        des_txt.setLineWrap(true);
        des_txt.setRows(5);
        des_txt.setWrapStyleWord(true);
        jScrollPane2.setViewportView(des_txt);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Texto:");

        txt1_txt.setEditable(false);
        txt1_txt.setColumns(20);
        txt1_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txt1_txt.setLineWrap(true);
        txt1_txt.setRows(5);
        txt1_txt.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txt1_txt);

        del_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        del_btn.setText("Eliminar");
        del_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_btnActionPerformed(evt);
            }
        });

        cancelar_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cancelar_btn.setText("Cancelar");
        cancelar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(nom_txt)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mod_txt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ver_modelo))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(del_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(im_txt)
                                    .addComponent(vi_txt)
                                    .addComponent(au_txt, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ver_audio, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ver_imagen, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ver_video, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nom_txt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(au_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(vi_txt)
                                .addComponent(ver_video))
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(ver_audio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ver_imagen)
                    .addComponent(im_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ver_modelo)
                    .addComponent(mod_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 96, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(del_btn)
                    .addComponent(cancelar_btn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bus_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128)))
                        .addGap(0, 99, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bus_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bus_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bus_btnActionPerformed
        // TODO add your handling code here:
        String  in =  id_txt.getText();
        if(!Validador.isNumeric(in)){
            JOptionPane.showMessageDialog(rootPane, "Debes ingresar un valor numérico");
            id_txt.setBackground(Color.pink);
            id_txt.setToolTipText("Debes ingresar un valor numérico");
            id_txt.requestFocus();
        }else{
            if(in.equals("")){
                JOptionPane.showMessageDialog(rootPane, "Debes ingresar un Id de Sala");
                id_txt.setBackground(Color.pink);
                id_txt.setToolTipText("Debes ingresar un Id de Sala");
                id_txt.requestFocus();
            }else{
                id_txt.setBackground(Color.white);
                id_txt.setToolTipText(null);
                Global.IdSala = Integer.parseInt(in);
                int ex = existeSala(Global.IdSala);
                if(ex == 0){
                    JOptionPane.showMessageDialog(rootPane, "No existe ninguna Sala con ese Id.\nPor favor verifica los datos y vuelve a intentarlo");   
                    id_txt.setBackground(Color.pink);
                    id_txt.setToolTipText("No existe ninguna Sala con ese Id");
                    id_txt.requestFocus();
                }else{
                    prc.setVisible(true);
                    
                    int c = 0;
                    int c1 = 0;
                    String x = null;
                    String x1 = null;
                    String dsalas = getDataSalaId(Global.IdSala);
                    String[] games2 = null;
                    games2 = dsalas.split("=>");

                    for (int q=0; q<games2.length; q++){
                        x1 = games2[q];
                        c1++;
                        if(c1 == 1) {
                            nom_txt.setText(x1);
                        }else{
                            if (c1 == 2) {
                                des_txt.setText(x1);
                            }
                        }
                    }

                    String contenidos = getContenidoSala (Global.IdSala);   
                    String[] games1 = null;
                    games1 = contenidos.split("=>");

                    for (int r=0; r<games1.length; r++){
                        x = games1[r];
                        c++;
                        if(c == 1) {
                            //au_txt.setText(x);
                            mostrarContenido(au_txt, x, ver_audio);
                        }
                        else{
                            if (c == 2) {
                                //vi_txt.setText(x);
                                mostrarContenido(vi_txt, x, ver_video);
                            }
                            else{
                                if ( c == 5 ) {
                                    //im_txt.setText(x);
                                    mostrarContenido(im_txt, x, ver_imagen);
                                }
                                else{
                                    if ( c == 4 ) {
                                        //mod_txt.setText(x);
                                        mostrarContenido(mod_txt, x, ver_modelo);
                                    }
                                    else{
                                        if (c == 3) {
                                          txt1_txt.setText(x);  
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                    prc.dispose();
                }
            }
        }
    }//GEN-LAST:event_bus_btnActionPerformed

    private void ver_audioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_audioActionPerformed
        // TODO add your handling code here:
        MediaPanelAudio mediaPanel = null;
        
        if(au_txt.getText().equals("") || au_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Audio.");      
        }else{
            prc.setVisible(true);
            File audio = new File (Global.directorioTemporal + "/audio.mp3");
            try {        
                FileUpload.download( au_txt.getText(), audio);
            } catch (MalformedURLException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            URL newurl = null;
            try {
                newurl = audio.toURL();
            } catch (MalformedURLException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
            prc.dispose();
            mediaPanel = new MediaPanelAudio( newurl );
            
        }
    }//GEN-LAST:event_ver_audioActionPerformed

    private void ver_videoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_videoActionPerformed
        // TODO add your handling code here:
        //MediaPanel mediaPanel = null;
           
        if(vi_txt.getText().equals("") || vi_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Video.");      
        }else{
            prc.setVisible(true);  
        
            File video = new File (Global.directorioTemporal + "/video.mov");
            try {        
                FileUpload.download(vi_txt.getText(), video);
            } catch (MalformedURLException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
       
            prc.dispose();
            Global.fvid = video;
            prbQT frame = new prbQT("Video"); 
            frame.pack(); 
            frame.setVisible(true); 
            frame.setAlwaysOnTop(true);
            try { 
                frame.movie.start(); 
            } catch (Exception e) { 
                e.printStackTrace(); 
            } 
        }
    }//GEN-LAST:event_ver_videoActionPerformed

    private void ver_imagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_imagenActionPerformed
        // TODO add your handling code here:
        if(im_txt.getText().equals("") || im_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Imagen.");      
        }else{
            prc.setVisible(true);
            File imagen = new File (Global.directorioTemporal + "/imagen.jpeg");
            try {        
                FileUpload.download(im_txt.getText(), imagen);
            } catch (MalformedURLException ex) {
                prc.dispose();
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                prc.dispose();
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                ImageIcon img = new ImageIcon (imagen.toURL());   
                int h = img.getIconHeight();
                System.out.println(h);
                int w = img.getIconWidth();
                System.out.println(w);
                Global.lab.setSize(w, h);
                Global.lab.setIcon(img);
                il = new ImagenLabel();
                il.setSize(w, h);
                il.setVisible(true);
            } catch (MalformedURLException ex) {
                prc.dispose();
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }   
            prc.dispose();
        }
    }//GEN-LAST:event_ver_imagenActionPerformed

    private void ver_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ver_modeloActionPerformed
        // TODO add your handling code here:
        if(mod_txt.getText().equals("") || mod_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Modelo 3D.");      
        }else{
            prc.setVisible(true);
            File modelo = new File (Global.directorioTemporal + "/modelo.ply");
            try {        
                FileUpload.download(mod_txt.getText(), modelo);
            } catch (MalformedURLException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                prc.dispose();
                Logger.getLogger(Borrar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }   
            prc.dispose();
            vtkRenderer render = new vtkRenderer();
            vtkRenderWindow renderWindow = new vtkRenderWindow();
            renderWindow.AddRenderer(render);
            vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
            renderWindowInteractor.SetRenderWindow(renderWindow);
            vtkPLYReader mod = new vtkPLYReader();
            mod.SetFileName(modelo.getAbsolutePath());
            mod.Update();
            vtkElevationFilter colorIt = new vtkElevationFilter();
            colorIt.SetInput(mod.GetOutput());
            colorIt.SetLowPoint(0, 0, -1);
            colorIt.SetHighPoint(0, 0, 1);
            vtkPolyDataMapper point = new vtkPolyDataMapper();
            point.SetInputConnection(mod.GetOutputPort());
            vtkActor actor = new vtkActor();
            actor.SetMapper(point);
            render.AddActor(actor);
            render.SetBackground(1, 1, 1);
            renderWindow.SetSize(500, 500);
            renderWindow.SetPosition(450, 200);
            renderWindow.Render();
            renderWindowInteractor.Start();
            render.Delete();
            renderWindow.Delete();
            renderWindowInteractor.Delete();
            mod.Delete();
            colorIt.Delete();
            actor.Delete();
        }
    }//GEN-LAST:event_ver_modeloActionPerformed

    private void del_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_btnActionPerformed
        // TODO add your handling code here:
        if(id_txt.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Debes escribir el Id de la Sala para realizar la búsqueda.");
            id_txt.setBackground(Color.pink);
            id_txt.setToolTipText("Debes ingresar un Id de Sala");
            id_txt.requestFocus();
        }else{
            id_txt.setBackground(Color.white);
            id_txt.setToolTipText(null);
            
            if(nom_txt.getText().equals("")){
                JOptionPane.showMessageDialog(rootPane, "Verifique si existe sala con ese Id.");
                id_txt.requestFocus();
            }else{
                if(JOptionPane.showConfirmDialog(rootPane, "¿Seguro que deseas eliminar esta Sala?") == JOptionPane.YES_OPTION){
                    prc.setVisible(true);
                    int b = borrarSala(Global.IdSala);
                    prc.dispose();
                    
                    if(b == 0){
                        JOptionPane.showMessageDialog(rootPane, "Se ha borrado la Sala n°" + Global.IdSala + " satisfactoriamente.");
                       
                        if(JOptionPane.showConfirmDialog(rootPane, "¿Deseas eliminar otra Sala?") == JOptionPane.YES_OPTION){
                            id_txt.setText("");
                            id_txt.setBackground(Color.white);
                            id_txt.setToolTipText(null);
                            id_txt.setText("");
                            nom_txt.setText("");
                            id_txt.requestFocus();
                            des_txt.setText("");
                            au_txt.setText("");
                            vi_txt.setText("");
                            im_txt.setText("");
                            mod_txt.setText("");
                            txt1_txt.setText("");
                            ver_audio.setEnabled(false);
                            ver_imagen.setEnabled(false);
                            ver_modelo.setEnabled(false);
                            ver_video.setEnabled(false);
                        }else{
                            this.dispose();
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al eliminar la Sala n°" + Global.IdSala + ".\nPor favor vuelve a intentarlo.");
                        id_txt.setBackground(Color.pink);
                        id_txt.setToolTipText("Ocurrió un error al eliminar la Sala");
                        id_txt.requestFocus();
                    }   
                }
            }
        }
    }//GEN-LAST:event_del_btnActionPerformed

    private void cancelar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_btnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelar_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Borrar_sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Borrar_sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Borrar_sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Borrar_sala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Borrar_sala().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField au_txt;
    private javax.swing.JButton bus_btn;
    private javax.swing.JButton cancelar_btn;
    private javax.swing.JButton del_btn;
    private javax.swing.JTextArea des_txt;
    private javax.swing.JTextField id_txt;
    private javax.swing.JTextField im_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mod_txt;
    private javax.swing.JTextField nom_txt;
    private javax.swing.JTextArea txt1_txt;
    private javax.swing.JButton ver_audio;
    private javax.swing.JButton ver_imagen;
    private javax.swing.JButton ver_modelo;
    private javax.swing.JButton ver_video;
    private javax.swing.JTextField vi_txt;
    // End of variables declaration//GEN-END:variables

    private static int existeSala(int id) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.existeSala(id);
    }

    private static String getContenidoSala(int id) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getContenidoSala(id);
    }

    private static String getDataSalaId(int idSala) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getDataSalaId(idSala);
    }

    private static int borrarSala(int idSala) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.borrarSala(idSala);
    }
  
    private void mostrarContenido(JTextField label, String dat, JButton bot){
        if(dat.equals("null")){
            label.setText("No existe contenido.");
            bot.setEnabled(false);
        }else{
            label.setText(dat);
            bot.setEnabled(true);
        }
    }
}
