/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.KeyEventPostProcessor;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.*;
import proyecto.clases.Global;

/**
 *
 * @author HP
 */
public class Menu_principal extends javax.swing.JFrame implements Runnable{    
    Image ico = null;
    JLabel contentPane = null;
    JPanel panelLogin = null;
    String hora, minutos, segundos, ampm, g;
    Calendar calendario;
    Thread h1;
    
    /**
     * Creates new form Menu_Principal
     */
    public Menu_principal() {
        initComponents();
        h1 = new Thread(this);
        h1.start();
        SetLook();
        panelLogin = panel_login;
        barra_menu_principal.setVisible(false); //oculta la barra de menu
        BotOk.setEnabled(true); //habilita el boton "Ok" en el inicio de sesión
        txtUsu.setBackground(Color.white);
        txtUsu.setToolTipText(null);
        txtPass.setBackground(Color.white);
        txtPass.setToolTipText(null);
        this.setLocationRelativeTo(null);
            
        //verificar si el directorio temporal existe, sino crearlo
        Global.directorioLocal = System.getProperty("user.dir");
        Global.directorioTemporal = Global.directorioLocal + "\\Temporal";
        File carpetaTemporal = new File(Global.directorioTemporal);
        
        if(carpetaTemporal.exists()){
            LimpiarDirectorio(Global.directorioTemporal);
        }
        carpetaTemporal.mkdir();
        
        Image icono = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(icono);
        ico = icono;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo_menu = new javax.swing.JPanel();
        panel_login = new javax.swing.JPanel();
        BotSalir = new javax.swing.JButton();
        txtUsu = new javax.swing.JTextField();
        BotOk = new javax.swing.JButton();
        txtPass = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        barra_menu_principal = new javax.swing.JMenuBar();
        MenUsu = new javax.swing.JMenu();
        agregar_usu = new javax.swing.JMenuItem();
        modificar_usu = new javax.swing.JMenuItem();
        eliminar_usu = new javax.swing.JMenuItem();
        listar_usu = new javax.swing.JMenu();
        usuarios = new javax.swing.JMenuItem();
        admin = new javax.swing.JMenuItem();
        empleado = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        perfil_usu = new javax.swing.JMenuItem();
        MenSala = new javax.swing.JMenu();
        agregar_sal = new javax.swing.JMenuItem();
        eliminar_sal = new javax.swing.JMenuItem();
        listar_sal = new javax.swing.JMenuItem();
        modificar_sal = new javax.swing.JMenuItem();
        MenObras = new javax.swing.JMenu();
        agregar_obr = new javax.swing.JMenuItem();
        eliminar_obr = new javax.swing.JMenuItem();
        listar_obr = new javax.swing.JMenuItem();
        modificar_obr = new javax.swing.JMenuItem();
        MenZona = new javax.swing.JMenu();
        agregar_zona = new javax.swing.JMenuItem();
        eliminar_zona = new javax.swing.JMenuItem();
        modificar_zona = new javax.swing.JMenuItem();
        MenHerramientas = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        NuevoJuego = new javax.swing.JMenuItem();
        Modificar = new javax.swing.JMenuItem();
        Eliminar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        CrearEstadisticas = new javax.swing.JMenuItem();
        jMenuItem111111111 = new javax.swing.JMenuItem();
        menuABMPreg = new javax.swing.JMenuItem();
        abmGrupos = new javax.swing.JMenuItem();
        menuABMOpciones = new javax.swing.JMenuItem();
        preg = new javax.swing.JMenuItem();
        aqr = new javax.swing.JMenuItem();
        Estadistica = new javax.swing.JMenuItem();
        MenSesion = new javax.swing.JMenu();
        cerrar_sesion = new javax.swing.JMenuItem();
        MenAyuda = new javax.swing.JMenu();
        manual = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        acerca_de = new javax.swing.JMenuItem();
        MenHora = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login de Usuario");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        fondo_menu.setPreferredSize(new java.awt.Dimension(600, 359));
        fondo_menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel_login.setBackground(new java.awt.Color(241, 241, 241));
        panel_login.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BotSalir.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        BotSalir.setText("Salir");
        BotSalir.setToolTipText("Cerrar el sistema");
        BotSalir.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BotSalirItemStateChanged(evt);
            }
        });
        BotSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotSalirActionPerformed(evt);
            }
        });
        BotSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BotSalirKeyPressed(evt);
            }
        });

        txtUsu.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        BotOk.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        BotOk.setText("Iniciar");
        BotOk.setToolTipText("Iniciar la sesión");
        BotOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotOkActionPerformed(evt);
            }
        });
        BotOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BotOkKeyPressed(evt);
            }
        });

        txtPass.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtPass.setToolTipText("");
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Login de Usuario");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Nick:");
        jLabel2.setToolTipText("Ingresar nick del usuario");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Contraseña:");
        jLabel3.setToolTipText("Si es la primera vez que se logea la contraseña es \"default\"");

        javax.swing.GroupLayout panel_loginLayout = new javax.swing.GroupLayout(panel_login);
        panel_login.setLayout(panel_loginLayout);
        panel_loginLayout.setHorizontalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_loginLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_loginLayout.createSequentialGroup()
                        .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsu, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(txtPass)))
                    .addGroup(panel_loginLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(BotOk, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
            .addGroup(panel_loginLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_loginLayout.setVerticalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_loginLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotOk)
                    .addComponent(BotSalir))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        fondo_menu.add(panel_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        getContentPane().add(fondo_menu, java.awt.BorderLayout.CENTER);

        barra_menu_principal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        barra_menu_principal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        MenUsu.setText("Usuarios");

        agregar_usu.setText("Agregar");
        agregar_usu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_usuActionPerformed(evt);
            }
        });
        MenUsu.add(agregar_usu);

        modificar_usu.setText("Modificar");
        modificar_usu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_usuActionPerformed(evt);
            }
        });
        MenUsu.add(modificar_usu);

        eliminar_usu.setText("Eliminar");
        eliminar_usu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_usuActionPerformed(evt);
            }
        });
        MenUsu.add(eliminar_usu);

        listar_usu.setText("Listar");

        usuarios.setText("Usuarios");
        usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosActionPerformed(evt);
            }
        });
        listar_usu.add(usuarios);

        admin.setText("Administradores");
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        listar_usu.add(admin);

        empleado.setText("Empleados");
        empleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empleadoActionPerformed(evt);
            }
        });
        listar_usu.add(empleado);

        MenUsu.add(listar_usu);
        MenUsu.add(jSeparator2);

        perfil_usu.setText("Mi perfil");
        perfil_usu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perfil_usuActionPerformed(evt);
            }
        });
        MenUsu.add(perfil_usu);

        barra_menu_principal.add(MenUsu);

        MenSala.setText("Salas");

        agregar_sal.setText("Agregar");
        agregar_sal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_salActionPerformed(evt);
            }
        });
        MenSala.add(agregar_sal);

        eliminar_sal.setText("Eliminar");
        eliminar_sal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_salActionPerformed(evt);
            }
        });
        MenSala.add(eliminar_sal);

        listar_sal.setText("Listar");
        listar_sal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listar_salActionPerformed(evt);
            }
        });
        MenSala.add(listar_sal);

        modificar_sal.setText("Modificar");
        modificar_sal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_salActionPerformed(evt);
            }
        });
        MenSala.add(modificar_sal);

        barra_menu_principal.add(MenSala);

        MenObras.setText("Obras");

        agregar_obr.setText("Agregar");
        agregar_obr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_obrActionPerformed(evt);
            }
        });
        MenObras.add(agregar_obr);

        eliminar_obr.setText("Eliminar");
        eliminar_obr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_obrActionPerformed(evt);
            }
        });
        MenObras.add(eliminar_obr);

        listar_obr.setText("Listar");
        listar_obr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listar_obrActionPerformed(evt);
            }
        });
        MenObras.add(listar_obr);

        modificar_obr.setText("Modificar");
        modificar_obr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_obrActionPerformed(evt);
            }
        });
        MenObras.add(modificar_obr);

        barra_menu_principal.add(MenObras);

        MenZona.setText("Zonas de Interés");

        agregar_zona.setText("Agregar");
        agregar_zona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_zonaActionPerformed(evt);
            }
        });
        MenZona.add(agregar_zona);

        eliminar_zona.setText("Eliminar");
        eliminar_zona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_zonaActionPerformed(evt);
            }
        });
        MenZona.add(eliminar_zona);

        modificar_zona.setText("Modificar");
        modificar_zona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_zonaActionPerformed(evt);
            }
        });
        MenZona.add(modificar_zona);

        barra_menu_principal.add(MenZona);

        MenHerramientas.setText("Herramientas");

        jMenu3.setText("Juego");

        NuevoJuego.setText("Nuevo Juego");
        NuevoJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoJuegoActionPerformed(evt);
            }
        });
        jMenu3.add(NuevoJuego);

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });
        jMenu3.add(Modificar);

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jMenu3.add(Eliminar);

        MenHerramientas.add(jMenu3);

        jMenu2.setText("Cuestionario");

        CrearEstadisticas.setText("Crear");
        CrearEstadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearEstadisticasActionPerformed(evt);
            }
        });
        jMenu2.add(CrearEstadisticas);

        jMenuItem111111111.setText("Listar");
        jMenuItem111111111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem111111111ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem111111111);

        menuABMPreg.setText("ABM Preguntas");
        menuABMPreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuABMPregActionPerformed(evt);
            }
        });
        jMenu2.add(menuABMPreg);

        abmGrupos.setText("ABM Grupos de Opciones");
        abmGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abmGruposActionPerformed(evt);
            }
        });
        jMenu2.add(abmGrupos);

        menuABMOpciones.setText("ABM Opciones");
        menuABMOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuABMOpcionesActionPerformed(evt);
            }
        });
        jMenu2.add(menuABMOpciones);

        preg.setText("Respuestas Brindadas");
        preg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pregActionPerformed(evt);
            }
        });
        jMenu2.add(preg);

        MenHerramientas.add(jMenu2);

        aqr.setText("Crear QR");
        aqr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aqrActionPerformed(evt);
            }
        });
        MenHerramientas.add(aqr);

        Estadistica.setText("Estadisticas Ingreso");
        Estadistica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstadisticaActionPerformed(evt);
            }
        });
        MenHerramientas.add(Estadistica);

        barra_menu_principal.add(MenHerramientas);

        MenSesion.setText("Sesión");

        cerrar_sesion.setText("Cerrar sesión");
        cerrar_sesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrar_sesionActionPerformed(evt);
            }
        });
        MenSesion.add(cerrar_sesion);

        barra_menu_principal.add(MenSesion);

        MenAyuda.setText("Ayuda");

        manual.setText("Manual");
        manual.setToolTipText("Abrir el manual de la aplicación");
        manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualActionPerformed(evt);
            }
        });
        MenAyuda.add(manual);
        MenAyuda.add(jSeparator1);

        acerca_de.setText("Acerca de");
        acerca_de.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acerca_deActionPerformed(evt);
            }
        });
        MenAyuda.add(acerca_de);

        barra_menu_principal.add(MenAyuda);

        MenHora.setText("Hora");
        MenHora.setEnabled(false);
        barra_menu_principal.add(MenHora);

        setJMenuBar(barra_menu_principal);

        pack();
    }// </editor-fold>//GEN-END:initComponents
         
    private void agregar_usuActionPerformed(java.awt.event.ActionEvent evt) {                                            
        Global.LimpiarGlobal();
        AltaUsuario alUs = new AltaUsuario();
        alUs.setVisible(true);
        alUs.setTitle("Alta de Usuario");
        // TODO add your handling code here:
    }                                           

    private void eliminar_usuActionPerformed(java.awt.event.ActionEvent evt) {                                             
        Global.LimpiarGlobal();        
        EliminarUsu elUs = new EliminarUsu();
        elUs.setVisible(true);
        // TODO add your handling code here:
    }                                                                 

    private void listar_salActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listar_salActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();        
        ListaSal liSal = new ListaSal();
        liSal.setVisible(true);
    }//GEN-LAST:event_listar_salActionPerformed

    private void modificar_usuActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        Global.LimpiarGlobal();        
        Modificar_usu modUs = new Modificar_usu();
        modUs.setVisible(true);
    }                                             

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void BotOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotOkActionPerformed
          // TODO add your handling code here:
        try{
        int id = login (txtUsu.getText(), txtPass.getText());
        BotOk.setEnabled(false);
        boolean error = false;
        
        //VALIDACION DE LOS DATOS DEL FORM
        //NICK
        if("".equals(txtUsu.getText())){ //vacio
            txtUsu.setBackground(Color.pink);
            txtUsu.setToolTipText("Debes escribir un Nick de usuario");
            txtUsu.requestFocus();
            error = true;
        }else{
            txtUsu.setBackground(Color.white);
            txtUsu.setToolTipText(null);
        }
        //NICK
        if("".equals(txtPass.getText())){ //vacio
            txtPass.setBackground(Color.pink);
            txtPass.setToolTipText("Debes escribir una contraseña, si es la primera ves que se logea la contraseña es 'default'");
            txtPass.requestFocus();
            error = true;
        }else{
            txtPass.setBackground(Color.white);
            txtPass.setToolTipText(null);
        }
        
        BotOk.setEnabled(true);
        
        if(error == false){ //si no hay errores consulta al servidor
            if(id == -1 ){
                JOptionPane.showMessageDialog(null, "Nick o contraseña incorrectos.\nPor favor verifícalos.");
                txtPass.setText("");
                txtUsu.setText("");
                txtUsu.requestFocus();
            }else{
                Global.nickUsLog = txtUsu.getText();
                String dat = getDataUsuario(txtUsu.getText());
                String[] dato = dat.split("=>");
                
                if(dato[6].equals("default")){ //cambiar contraseña por defecto
                    JOptionPane.showMessageDialog(panel_login, "Debes cambiar la contraseña por defecto");
                    Passwd ventana = new Passwd();
                    ventana.setVisible(true);
                     txtPass.setText("");
                }else{ //muestra el menú principal
                    this.setTitle("Menú Principal");
                    Global.IDUsu = id;
                    Global.TipoUs = tipoUsuario(txtUsu.getText());
                    Global.logueado = true;
                    Global.passUs = txtPass.getText();
                    barra_menu_principal.setVisible(true);
                    panel_login.setVisible(false);

                    if (Global.TipoUs == 1) { //usuario administrador
                        MenSala.setVisible(false);
                        MenObras.setVisible(false);
                        MenUsu.setVisible(true);
                            agregar_usu.setVisible(true);
                            modificar_usu.setVisible(true);
                            eliminar_usu.setVisible(true);
                            listar_usu.setVisible(true);
                            perfil_usu.setVisible(true);
                        MenSesion.setVisible(true);
                        MenZona.setVisible(false);
                        MenHerramientas.setVisible(false);
                        cerrar_sesion.setText("Cerrar sesión Administrador");
                    }else { //usuario usuario
                        MenSala.setVisible(true);
                        MenObras.setVisible(true);
                        MenUsu.setVisible(true);
                            agregar_usu.setVisible(false);
                            modificar_usu.setVisible(false);
                            eliminar_usu.setVisible(false);
                            listar_usu.setVisible(false);
                            perfil_usu.setVisible(true);
                        MenSesion.setVisible(true);
                        MenZona.setVisible(true); 
                        MenHerramientas.setVisible(true);
                        cerrar_sesion.setText("Cerrar sesión Empleado");
                    }
                    
                    contentPane = new JLabel();
                    contentPane.setIcon( new ImageIcon(Global.directorioLocal + "/fondo.jpg") );
                    contentPane.setLayout( new BorderLayout() );
                    this.setContentPane( contentPane );
                }
            }
        }
        } catch(Exception e){
            e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "Servidor inaccesible! Intente mas tarde. En caso de persistir el problema contáctese con Soporte!");

        }
    }//GEN-LAST:event_BotOkActionPerformed

    private void BotSalirActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        System.exit(0);
    }                                                                                

    private void agregar_obrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_obrActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        AgregarObra agOb = new AgregarObra();
        agOb.setIconImage(ico);
        agOb.setVisible(true);
    }//GEN-LAST:event_agregar_obrActionPerformed
                                      
    private void agregar_salActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        AltaSala AltaS = new AltaSala();
        AltaS.setIconImage(ico);
        AltaS.setVisible(true); 
    }                                           

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        ListarUsu liAd = new ListarUsu();
        liAd.setIconImage(ico);
        liAd.setVisible(true);
    }                                        

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        ListarAdmin liAd = new ListarAdmin();
        liAd.setIconImage(ico);
        liAd.setVisible(true);
    }                                     

    private void ZonaInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZonaInteresActionPerformed
        // TODO add your handling code here:
        Global.zag = true;
        ZonaInteresSal zis = new ZonaInteresSal("Agregar Zona de Interés");
        zis.setIconImage(ico);
        zis.setVisible(true);
    }//GEN-LAST:event_ZonaInteresActionPerformed

    private void modificar_obrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_obrActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        ModificarObra modOb = new ModificarObra();
        modOb.setIconImage(ico);
        modOb.setVisible(true);
    }//GEN-LAST:event_modificar_obrActionPerformed

    private void listar_obrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listar_obrActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        ListarObra mo = new ListarObra();
        mo.setIconImage(ico);
        mo.setVisible(true);
    }//GEN-LAST:event_listar_obrActionPerformed

    private void eliminar_obrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_obrActionPerformed
        // TODO add your handling code here:
         
        Global.LimpiarGlobal();
        EliminarObra elim = new EliminarObra();
        elim.setIconImage(ico);
        elim.setVisible(true);
    }//GEN-LAST:event_eliminar_obrActionPerformed

    private void agregar_zonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_zonaActionPerformed
        // TODO add your handling code here:
       
        Global.LimpiarGlobal();
        Global.zag = true;
        ZonaInteresSal zis = new ZonaInteresSal("Agregar Zona de Interés");
        zis.setIconImage(ico);
        zis.setVisible(true);
    }//GEN-LAST:event_agregar_zonaActionPerformed

    private void modificar_salActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_salActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        Modificar_sala modSal = new Modificar_sala();
        modSal.setIconImage(ico);
        modSal.setVisible(true);
    }//GEN-LAST:event_modificar_salActionPerformed

    private void cerrar_sesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrar_sesionActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        if(JOptionPane.showConfirmDialog(rootPane, "¿Salir de la sesión?") == JOptionPane.YES_OPTION){
//            barra_menu_principal.setVisible(false);
//            panel_login.setVisible(true);
//            BotOk.setEnabled(true);
//            txtUsu.setText(null);
//            txtPass.setText(null);
//            this.setTitle("Login de Usuario");
//contentPane.setVisible(false);
//panelLogin.setVisible(true);
//                    JLabel contentPane = null;
//                    contentPane.setIcon( null );
//                    contentPane.setLayout( null );
//                    this.setContentPane( contentPane );
            this.dispose();
            Menu_principal menu = new Menu_principal();
            menu.setVisible(true);
            barra_menu_principal.setVisible(false);
        }
    }//GEN-LAST:event_cerrar_sesionActionPerformed

    private void eliminar_zonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_zonaActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        Global.zelim = true;
        ZonaInteresSal zis = new ZonaInteresSal("Eliminar Zona de Interés");
        zis.setIconImage(ico);
        zis.setVisible(true);
    }//GEN-LAST:event_eliminar_zonaActionPerformed

    private void modificar_zonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_zonaActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        Global.zmod = true;
        ZonaInteresSal zis = new ZonaInteresSal("Modificar Zona de Interés");
        zis.setIconImage(ico);
        zis.setVisible(true);
    }//GEN-LAST:event_modificar_zonaActionPerformed

    private void eliminar_salActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_salActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        Borrar_sala elimSal = new Borrar_sala();
        elimSal.setIconImage(ico);
        elimSal.setVisible(true);
    }//GEN-LAST:event_eliminar_salActionPerformed

    private void empleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empleadoActionPerformed
        // TODO add your handling code here:
        ListarEmplea liem = new ListarEmplea();
        liem.setIconImage(ico);
        liem.setVisible(true);
    }//GEN-LAST:event_empleadoActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
        ListarAdmin liAd = new ListarAdmin();
        liAd.setIconImage(ico);
        liAd.setVisible(true);
    }//GEN-LAST:event_adminActionPerformed

    private void usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosActionPerformed
        // TODO add your handling code here:
        ListarUsu liAd = new ListarUsu();
        liAd.setIconImage(ico);
        liAd.setVisible(true);
    }//GEN-LAST:event_usuariosActionPerformed

    private void perfil_usuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perfil_usuActionPerformed
        // TODO add your handling code here:
        Global.LimpiarGlobal();
        PerfilUsuario perUs = new PerfilUsuario();
        perUs.setIconImage(ico);
        perUs.setVisible(true);
        perUs.setTitle("Mi Perfil");
    }//GEN-LAST:event_perfil_usuActionPerformed

    private void manualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualActionPerformed
        // TODO add your handling code here:
        String Documento = null;
        if(Global.TipoUs == 1){
            Documento = Global.directorioLocal + "/manual_admin.pdf";
        }else{
            Documento = Global.directorioLocal + "/manual_empleado.pdf";
        }
        
        try {
            Desktop.getDesktop().open(new File(Documento));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(panelLogin, "No fue posible abrir el Manual de la aplicación.\nPor favor verifica que tienes un visor de archivos PDF instalado.", "Error de Documento", 2);
        } catch(Exception e){
            JOptionPane.showMessageDialog(panelLogin, "No fue posible abrir el Manual de la aplicación.\nPor favor verifica que tienes un visor de archivos PDF instalado.", "Error de Documento", 2);
        }
    }//GEN-LAST:event_manualActionPerformed

    private void acerca_deActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acerca_deActionPerformed
        // TODO add your handling code here:
        AcercaDe acerca = new AcercaDe();
        acerca.setVisible(true);
    }//GEN-LAST:event_acerca_deActionPerformed

    private void BotOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BotOkKeyPressed
        // TODO add your handling code here:
        int k =evt.getKeyCode();
        if(k == KeyEvent.VK_ENTER){

        BotOkActionPerformed(null);
        }

    }//GEN-LAST:event_BotOkKeyPressed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        // TODO add your handling code here:
           int k =evt.getKeyCode();
        if(k == KeyEvent.VK_ENTER){

        BotOkActionPerformed(null);
        }
    
    }//GEN-LAST:event_txtPassKeyPressed

    private void BotSalirItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BotSalirItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_BotSalirItemStateChanged

    private void BotSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BotSalirKeyPressed
        // TODO add your handling code here:
        int k =evt.getKeyCode();
        if(k == KeyEvent.VK_ENTER){

        BotSalirActionPerformed(null);
        }
    }//GEN-LAST:event_BotSalirKeyPressed

    private void CrearEstadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearEstadisticasActionPerformed
        //CREAR ENCUESTA
        CrearEncuesta1 ce1 = new CrearEncuesta1();
        ce1.setAlwaysOnTop(true);
        ce1.setVisible(true);
        ce1.setLocationRelativeTo(null);
    }//GEN-LAST:event_CrearEstadisticasActionPerformed

    private void NuevoJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoJuegoActionPerformed
        Crearjuego1 cj1 = new Crearjuego1();
        cj1.setIconImage(ico);
        cj1.setVisible(true);
        cj1.setLocationRelativeTo(null);
    }//GEN-LAST:event_NuevoJuegoActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        ModificarJuego mj = new ModificarJuego();
        mj.setAlwaysOnTop(true);
        mj.setVisible(true);
        mj.setLocationRelativeTo(null);
    }//GEN-LAST:event_ModificarActionPerformed

    private void jMenuItem111111111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem111111111ActionPerformed
        VerCuestionariossss vc = new VerCuestionariossss();
        vc.setAlwaysOnTop(true);
        vc.setVisible(true);
        vc.setLocationRelativeTo(null);
        

    }//GEN-LAST:event_jMenuItem111111111ActionPerformed

    private void menuABMOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuABMOpcionesActionPerformed
        ABMValores o = new ABMValores();
        o.setAlwaysOnTop(true);
        o.setVisible(true);
        o.setLocationRelativeTo(null);        
    }//GEN-LAST:event_menuABMOpcionesActionPerformed

    private void abmGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abmGruposActionPerformed
        ABMOpciones o = new ABMOpciones();
        o.setAlwaysOnTop(true);
        o.setVisible(true);
        o.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_abmGruposActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
       EliminarJuego mj = new EliminarJuego();
        mj.setAlwaysOnTop(true);
        mj.setVisible(true);
        mj.setLocationRelativeTo(null);
    }//GEN-LAST:event_EliminarActionPerformed

    private void aqrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aqrActionPerformed
        // TODO add your handling code here:
        
        formulario qr;
        qr = new formulario();
        qr.setAlwaysOnTop(true);
        qr.setVisible(true);
        qr.setLocationRelativeTo(null);
    }//GEN-LAST:event_aqrActionPerformed

    private void menuABMPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuABMPregActionPerformed
        ABMPregunta p = new ABMPregunta();
        p.setVisible(true);
        p.setAlwaysOnTop(true);
        p.setLocationRelativeTo(null);

    }//GEN-LAST:event_menuABMPregActionPerformed

    private void EstadisticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstadisticaActionPerformed
        // TODO add your handling code here:
        Cestadisticas e = new Cestadisticas();
        e.setVisible(true);
        e.setAlwaysOnTop(true);
        e.setLocationRelativeTo(null);
    }//GEN-LAST:event_EstadisticaActionPerformed

    private void pregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pregActionPerformed

         verCuest e = new verCuest();
        e.setVisible(true);
        e.setAlwaysOnTop(true);
        e.setLocationRelativeTo(null);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_pregActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
                
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            UIManager.removeAuxiliaryLookAndFeel(UIManager.getLookAndFeel());
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel");               

        }  catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 
        
        catch(Exception ex){
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (Exception e) {
            }
        }
        
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_principal().setVisible(true);
                
            }
        });
    }

    public void SetLook(){
        try{
            UIManager.removeAuxiliaryLookAndFeel(UIManager.getLookAndFeel());
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel");             
        }catch (Exception ex){
            JOptionPane.showMessageDialog(rootPane, "Ha ocurrido una excepción con el estilo de la ventana.\nSe ha cargado el estilo del sistema operativo.");
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            } catch (Exception e) {
                //e.printStackTrace();
            }
        }
        SwingUtilities.updateComponentTreeUI(this);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotOk;
    private javax.swing.JButton BotSalir;
    private javax.swing.JMenuItem CrearEstadisticas;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JMenuItem Estadistica;
    private javax.swing.JMenu MenAyuda;
    private javax.swing.JMenu MenHerramientas;
    private javax.swing.JMenu MenHora;
    private javax.swing.JMenu MenObras;
    private javax.swing.JMenu MenSala;
    private javax.swing.JMenu MenSesion;
    private javax.swing.JMenu MenUsu;
    private javax.swing.JMenu MenZona;
    private javax.swing.JMenuItem Modificar;
    private javax.swing.JMenuItem NuevoJuego;
    private javax.swing.JMenuItem abmGrupos;
    private javax.swing.JMenuItem acerca_de;
    private javax.swing.JMenuItem admin;
    private javax.swing.JMenuItem agregar_obr;
    private javax.swing.JMenuItem agregar_sal;
    private javax.swing.JMenuItem agregar_usu;
    private javax.swing.JMenuItem agregar_zona;
    private javax.swing.JMenuItem aqr;
    private javax.swing.JMenuBar barra_menu_principal;
    private javax.swing.JMenuItem cerrar_sesion;
    private javax.swing.JMenuItem eliminar_obr;
    private javax.swing.JMenuItem eliminar_sal;
    private javax.swing.JMenuItem eliminar_usu;
    private javax.swing.JMenuItem eliminar_zona;
    private javax.swing.JMenuItem empleado;
    private javax.swing.JPanel fondo_menu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem111111111;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem listar_obr;
    private javax.swing.JMenuItem listar_sal;
    private javax.swing.JMenu listar_usu;
    private javax.swing.JMenuItem manual;
    private javax.swing.JMenuItem menuABMOpciones;
    private javax.swing.JMenuItem menuABMPreg;
    private javax.swing.JMenuItem modificar_obr;
    private javax.swing.JMenuItem modificar_sal;
    private javax.swing.JMenuItem modificar_usu;
    private javax.swing.JMenuItem modificar_zona;
    private javax.swing.JPanel panel_login;
    private javax.swing.JMenuItem perfil_usu;
    private javax.swing.JMenuItem preg;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUsu;
    private javax.swing.JMenuItem usuarios;
    // End of variables declaration//GEN-END:variables

    private static int login(java.lang.String user, java.lang.String pass) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.login(user, pass);
    }

    private static int tipoUsuario(java.lang.String nick) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.tipoUsuario(nick);
    }

    /**
     * Limpia el contenido del directorio indicado (independientemente si contiene archivos y/o carpetas)
     * @param directorio 
     */
    private void LimpiarDirectorio(String directorio){
        File folder = new File(directorio);
        File[] listOfFiles = folder.listFiles();
        
        for (int i = 0; i < listOfFiles.length; i++) {
            try{
                if(listOfFiles[i].isFile()) {
                    listOfFiles[i].delete();
                    //System.out.print("ESTADO: " + listOfFiles[i].getName() + ": " + listOfFiles[i].delete() + "\n");
                }else{
                    LimpiarDirectorio(directorio + "\\" + listOfFiles[i].getName());
                    new File(directorio + "\\" + listOfFiles[i].getName()).delete();
                }
            }catch(Exception e){
                System.out.print("Error: " + e);
            }
        }
    }

    private static String getDataUsuario(java.lang.String nick) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getDataUsuario(nick);
    }
    
    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == h1) {
            DateTime();
            //date_lbl.setText(g);
            MenHora.setText("                             "+hora + ":" + minutos + ":" + segundos + " " + ampm);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
            }
        }
    }    
    
    private void DateTime() {    
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == Calendar.AM ? "AM" : "PM";

        if (ampm.equals("PM")) {
            int h = calendario.get(Calendar.HOUR_OF_DAY) - 12;
            hora = h > 9 ? "" + h : "0" + h;
        } else {
            hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        }
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
       
        Date mydate = new Date();
        String hs = Integer.toString(mydate.getHours());
        String min = Integer.toString(mydate.getMinutes());
        String sec = Integer.toString(mydate.getSeconds());
        //hs_lbl.setText(hs+":"+min+":"+sec);
        String formato="yyyy";
        SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
        String myday , mymonth, day = null, month = null ,myweekday, year;
        year = Integer.toString(Integer.parseInt(dateFormat.format(mydate)));
        myday = Integer.toString(mydate.getDay());
        mymonth =Integer.toString( mydate.getMonth());
        myweekday= Integer.toString(mydate.getDate());
        // weekday= myweekday;
        //year = mydate.getYear();

        if(myday.equals("0")) {
            day = " domingo ";
        }
        else if(myday.equals("1")) {
            day = " lunes ";
        }
        else if(myday.equals("2")) {
            day = " martes ";
        }
        else if(myday.equals("3")) {
            day = " miércoles ";
        }
        else if(myday.equals("4")) {
            day = " jueves ";
        }
        else if(myday.equals("5")) {
            day = " viernes ";
        }
        else if(myday.equals("6")) {
            day = " sábado ";
        }
        if(mymonth.equals("0")) {
            month = "enero ";
        }
        else if(mymonth.equals("1")) {
            month = "febrero ";
        }
        else if(mymonth.equals("2")) {
            month = "marzo ";
        }
        else if(mymonth.equals("3")) {
            month = "abril ";
        }
        else if(mymonth.equals("4")) {
            month = "mayo ";
        }
        else if(mymonth.equals("5")) {
            month = "junio ";
        }
        else if(mymonth.equals("6")) {
            month = "julio ";
        }
        else if(mymonth.equals("7")) {
            month = "agosto ";
        }
        else if(mymonth.equals("8")) {
            month = "setiembre ";
        }
        else if(mymonth.equals("9")) {
            month = "octubre ";
        }
        else if(mymonth.equals("10")) {
            month = "noviembre ";
        }
        else if(mymonth.equals("11")) {
            month = "diciembre " ;
        }
        g = ( day  + myweekday + " de " + month +"de " + year );
    }
}
