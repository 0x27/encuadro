/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import proyecto.clases.FileUpload;
import proyecto.clases.Global;
import proyecto.clases.MediaPanelAudio;
import proyecto.clases.prbQT;
import vtk.vtkActor;
import vtk.vtkElevationFilter;
import vtk.vtkNativeLibrary;
import vtk.vtkPLYReader;
import vtk.vtkPolyDataMapper;
import vtk.vtkRenderWindow;
import vtk.vtkRenderWindowInteractor;
import vtk.vtkRenderer;

/**
 *
 * @author SysAdmin
 */
public class elimZi extends javax.swing.JFrame {
    private DefaultListModel modelListaZonas = new DefaultListModel();
    String[] sep, sepObra;
    boolean vacio = false;
    ProcesandoPeticion prc = new ProcesandoPeticion();
    static {
        if (!vtkNativeLibrary.LoadAllNativeLibraries()) {
            for (vtkNativeLibrary lib : vtkNativeLibrary.values()) {
                if (!lib.IsLoaded()) {
                    System.out.println(lib.GetLibraryName() + " not loaded");
                }
            }
        }
        vtkNativeLibrary.DisableOutputWindow(null);
    }
    /**
     * Creates new form elimZi
     */
    public elimZi() {
        Image ico = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(ico);
        initComponents();
        prc.setLocationRelativeTo(null);
        prc.setVisible(true);
        this.setLocationRelativeTo(null);
        ListaZonas.setModel(modelListaZonas);
        makevisible(false);
        CargarLista();
        
        if(Global.nomObra != null){
            lbl_nombre2.setText(Global.nomObra);
        }else{
            lbl_nombre2.setText("-");
        }
        
        File path = new File(Global.directorioLocal + "/imagen_default.jpg");
        BufferedImage read = null;
        try {
            read = ImageIO.read(path);
        } catch (IOException ex) {
            Logger.getLogger(elimZi.class.getName()).log(Level.SEVERE, null, ex);
        }
        //imagen por defecto de label Imagen
        CambiarImagenLabel(read, Imagen);
        prc.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ListaZonas = new javax.swing.JList();
        BotCancelar = new javax.swing.JButton();
        BotBorrar = new javax.swing.JButton();
        lbl_titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        panel_imagen = new javax.swing.JPanel();
        Imagen = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        LabVideo1 = new javax.swing.JLabel();
        LabAudio1 = new javax.swing.JLabel();
        LabText = new javax.swing.JLabel();
        LabMod3D = new javax.swing.JLabel();
        verVideo = new javax.swing.JButton();
        verAudio = new javax.swing.JButton();
        verModelo = new javax.swing.JButton();
        LabVideo = new javax.swing.JTextField();
        LabAudio = new javax.swing.JTextField();
        LabModelo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        LabTexto = new javax.swing.JTextArea();
        BotAtras = new javax.swing.JButton();
        lbl_nombre = new javax.swing.JLabel();
        lbl_nombre2 = new javax.swing.JLabel();
        lbl_nro_zona = new javax.swing.JLabel();
        lbl_nro_zona2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminar Zona de Interés");
        setAlwaysOnTop(true);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        ListaZonas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaZonasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListaZonas);

        BotCancelar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        BotCancelar.setText("Cancelar");
        BotCancelar.setToolTipText("Cerrar la ventana actual");
        BotCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotCancelarActionPerformed(evt);
            }
        });

        BotBorrar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        BotBorrar.setText("Eliminar");
        BotBorrar.setToolTipText("Eliminar la Zona de Interés seleccionada");
        BotBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotBorrarActionPerformed(evt);
            }
        });

        lbl_titulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_titulo.setText("Eliminar Zona de Interés (3 de 3)");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("3- Seleccione de la lista la Zona de Interés que desee eliminar:");

        panel_imagen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imagen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N
        panel_imagen.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        Imagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panel_imagenLayout = new javax.swing.GroupLayout(panel_imagen);
        panel_imagen.setLayout(panel_imagenLayout);
        panel_imagenLayout.setHorizontalGroup(
            panel_imagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_imagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_imagenLayout.setVerticalGroup(
            panel_imagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_imagenLayout.createSequentialGroup()
                .addComponent(Imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Contenidos"));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        LabVideo1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        LabVideo1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabVideo1.setText("Video:");
        LabVideo1.setOpaque(true);

        LabAudio1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        LabAudio1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabAudio1.setText("Audio:");
        LabAudio1.setOpaque(true);

        LabText.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        LabText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabText.setText("Texto:");
        LabText.setOpaque(true);

        LabMod3D.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        LabMod3D.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabMod3D.setText("Modelo 3D:");
        LabMod3D.setOpaque(true);

        verVideo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        verVideo.setText("Ver");
        verVideo.setToolTipText("Reproducir el Video asociado");
        verVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verVideoActionPerformed(evt);
            }
        });

        verAudio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        verAudio.setText("Ver");
        verAudio.setToolTipText("Reproducir el Audio asociado");
        verAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verAudioActionPerformed(evt);
            }
        });

        verModelo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        verModelo.setText("Ver");
        verModelo.setToolTipText("Mostrar el Modelo 3D asociado");
        verModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verModeloActionPerformed(evt);
            }
        });

        LabVideo.setEditable(false);
        LabVideo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        LabAudio.setEditable(false);
        LabAudio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        LabModelo.setEditable(false);
        LabModelo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        LabTexto.setEditable(false);
        LabTexto.setBackground(new java.awt.Color(240, 240, 240));
        LabTexto.setColumns(20);
        LabTexto.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        LabTexto.setLineWrap(true);
        LabTexto.setRows(5);
        LabTexto.setWrapStyleWord(true);
        jScrollPane2.setViewportView(LabTexto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabAudio1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabVideo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabMod3D, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabModelo)
                            .addComponent(LabVideo)
                            .addComponent(LabAudio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(verAudio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(verModelo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(verVideo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabVideo1)
                    .addComponent(verVideo)
                    .addComponent(LabVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabAudio1)
                    .addComponent(verAudio)
                    .addComponent(LabAudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabMod3D, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verModelo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LabText)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        BotAtras.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        BotAtras.setText("<< Atrás");
        BotAtras.setToolTipText("Volver a la selección de Obra");
        BotAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotAtrasActionPerformed(evt);
            }
        });

        lbl_nombre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_nombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_nombre.setText("Obra:");

        lbl_nombre2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lbl_nro_zona.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbl_nro_zona.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_nro_zona.setText("Zona n°:");

        lbl_nro_zona2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_nro_zona2.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lbl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(63, 63, 63)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panel_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BotAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BotBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BotCancelar)
                                        .addGap(29, 29, 29))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_nro_zona, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_nro_zona2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_nombre2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_nro_zona2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_nro_zona, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotCancelar)
                    .addComponent(BotBorrar)
                    .addComponent(BotAtras))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotCancelarActionPerformed
        // TODO add your handling code here:
        Global.zelim = false;
        this.setVisible(false);
    }//GEN-LAST:event_BotCancelarActionPerformed

    private void BotBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotBorrarActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "¿Seguro que deseas eliminar la Zona de Interés n°" + sep[0] + "?") == JOptionPane.YES_OPTION){
            if(borrarZona(Integer.parseInt(sep[0])) == 0){
                if(JOptionPane.showConfirmDialog(panel_imagen, "La Zona de Interés se eliminó correctamente.\n¿Deseas eliminar otra Zona?") == JOptionPane.YES_OPTION){
                    this.dispose();
                    elimZi ezi = new elimZi();
                    ezi.setVisible(true);
                }else{ //cerrar la ventana
                    Global.zelim = false;
                    this.dispose();
                }
            }else{
                JOptionPane.showMessageDialog(panel_imagen, "No fue posible eliminar la Zona de Interés.\nPor favor inténtalo de nuevo.");
            }
        }
    }//GEN-LAST:event_BotBorrarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        if(vacio == true){
            Global.nomObra = null;
            this.setVisible(false);
//            ZonaInteresOb zio = new ZonaInteresOb(this.getTitle());
//            zio.setVisible(true);            
        }
    }//GEN-LAST:event_formComponentShown

    private void verVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verVideoActionPerformed
        // TODO add your handling code here:
        if(Global.video){
            prc.setVisible(true);
            //MediaPanel mediaPanel = null;
            File video = null;
            video = new File(Global.directorioTemporal + "/video.mov");
            try {
                FileUpload.download(sep[2], video);
            } catch (MalformedURLException ex) {
                Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
            }
            Global.fvid = video;
            prc.dispose();

            if ( Global.fvid != null ){
                prbQT frame = new prbQT(sep[2]); 
                 frame.pack(); 
                 frame.setVisible(true); 
            try { 
                frame.movie.start(); 
            } catch (Exception e) { 
                e.printStackTrace(); 
            } 
            }else{
                JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "La Zona de Interés no contiene Video.");
        }
    }//GEN-LAST:event_verVideoActionPerformed

    private void verAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verAudioActionPerformed
        // TODO add your handling code here:
        if(Global.audio){
            prc.setVisible(true);
            MediaPanelAudio mediaPanel = null;
            File audio = null;
            audio = new File(Global.directorioTemporal + "/audio.mp3");
            try {
                FileUpload.download(sep[1], audio);
            } catch (MalformedURLException ex) {
                Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
            }

            URL mediaURL = null;
            try{
                mediaURL = audio.toURL();
            }
            catch ( MalformedURLException malformedURLException ){
                System.err.println( "No se pudo crear la URL" );
            }
            prc.dispose();

            if ( mediaURL != null ){
                mediaPanel = new MediaPanelAudio( mediaURL );
            }else{
                JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "La Zona de Interés no contiene Audio.");
        }
    }//GEN-LAST:event_verAudioActionPerformed

    private void verModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verModeloActionPerformed
        // TODO add your handling code here:
        if(Global.modelo3D){
            prc.setVisible(true);
            File modelo = new File(Global.directorioTemporal + "/modelo.ply");
            try {
                FileUpload.download(sep[4], modelo);
            } catch (MalformedURLException ex) {
                Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
            }
            prc.dispose();

            vtkRenderer render = new vtkRenderer();
            vtkRenderWindow renderWindow = new vtkRenderWindow();
            renderWindow.AddRenderer(render);
            vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
            renderWindowInteractor.SetRenderWindow(renderWindow);
            vtkPLYReader mod = new vtkPLYReader();
            mod.SetFileName(modelo.getAbsolutePath());
            mod.Update();
            vtkElevationFilter colorIt = new vtkElevationFilter();
            colorIt.SetInput(mod.GetOutput());
            colorIt.SetLowPoint(0, 0, -1);
            colorIt.SetHighPoint(0, 0, 1);
            vtkPolyDataMapper point = new vtkPolyDataMapper();
            point.SetInputConnection(mod.GetOutputPort());
            vtkActor actor = new vtkActor();
            actor.SetMapper(point);
            render.AddActor(actor);
            render.SetBackground(1, 1, 1);
            renderWindow.SetSize(500, 500);
            renderWindow.SetPosition(450, 200);
            renderWindow.Render();
            renderWindowInteractor.Start();
            render.Delete();
            renderWindow.Delete();
            renderWindowInteractor.Delete();
            mod.Delete();
            colorIt.Delete();
            actor.Delete();
        }else{
            JOptionPane.showMessageDialog(rootPane, "La Zona de Interés no contiene Modelo 3D.");
        }
    }//GEN-LAST:event_verModeloActionPerformed

    private void ListaZonasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaZonasValueChanged
        // TODO add your handling code here:
        prc.setVisible(true);
        String idZon = (String) ListaZonas.getSelectedValue();
        int idZ = Integer.parseInt(idZon);
        lbl_nombre2.setText(Global.nomObra);
        lbl_nro_zona2.setText(idZon);
        String obra = getContenidoObra(Global.nomObra);
        sepObra = obra.split("=>");
        String contenidos = getContenidoZona(idZ);
        sep = contenidos.split("=>");
        File path = null;
        path = new File(Global.directorioTemporal + "/imatmp.jpg");
        try {
            FileUpload.download(sepObra[5], path);
        } catch (MalformedURLException ex) {
            Logger.getLogger(elimZi.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(elimZi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        BufferedImage read = null;
        try {
            read = ImageIO.read(path);
        } catch (IOException ex) {
            Logger.getLogger(elimZi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //cargar las zonas de interes sobre la imagen
        Graphics2D g = (Graphics2D) read.getGraphics();
        g.setColor(new Color(200, 0, 0));
        g.setStroke(new BasicStroke(5f));
        g.drawRect(Integer.parseInt(sep[8]), Integer.parseInt(sep[9]), Integer.parseInt(sep[7]), Integer.parseInt(sep[6]));
        
        //cambiar imagen de la obra
        CambiarImagenLabel(read, Imagen);
        
        //cargar los contenidos
        makevisible(true);
        mostrarContenido(LabAudio, sep[1], "audio");
        mostrarContenido(LabVideo, sep[2], "video");
        mostrarContenido(LabModelo, sep[4], "modelo");
        
        if(sep[3].equals("null")) {
            LabTexto.setText("No existe contenido.");
            Global.texto = false;
        }else {
            LabTexto.setText(sep[3]);
            Global.texto = true;
        }
        
        BotBorrar.setEnabled(true);
        prc.dispose();
    }//GEN-LAST:event_ListaZonasValueChanged

    private void BotAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotAtrasActionPerformed
        // TODO add your handling code here:
        Global.nomObra = null;
        ZonaInteresOb zio = new ZonaInteresOb(this.getTitle());
        zio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BotAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(elimZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(elimZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(elimZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(elimZi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new elimZi().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotAtras;
    private javax.swing.JButton BotBorrar;
    private javax.swing.JButton BotCancelar;
    private javax.swing.JLabel Imagen;
    private javax.swing.JTextField LabAudio;
    private javax.swing.JLabel LabAudio1;
    private javax.swing.JLabel LabMod3D;
    private javax.swing.JTextField LabModelo;
    private javax.swing.JLabel LabText;
    private javax.swing.JTextArea LabTexto;
    private javax.swing.JTextField LabVideo;
    private javax.swing.JLabel LabVideo1;
    private javax.swing.JList ListaZonas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_nombre2;
    private javax.swing.JLabel lbl_nro_zona;
    private javax.swing.JLabel lbl_nro_zona2;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JPanel panel_imagen;
    private javax.swing.JButton verAudio;
    private javax.swing.JButton verModelo;
    private javax.swing.JButton verVideo;
    // End of variables declaration//GEN-END:variables
    
    public void CargarLista(){
        String data = getZonaObra(Global.nomObra);
        
        if(data.equals("")){
            prc.dispose();
            JOptionPane.showMessageDialog(rootPane, "Esta Obra no tiene Zonas de Interés.");
            this.BotBorrar.setEnabled(false);
            vacio = true;
        }else{
            String[] sep = data.split("=>");
            String e;
            for (int i=0;i<sep.length;i++){
                e = sep[i];
                modelListaZonas.addElement(e);
            }
            prc.dispose();
            vacio = false;
        }
    }

    public void makevisible(Boolean b){
        if(b==true){
            LabAudio.setEnabled(true);
            LabVideo.setEnabled(true);
            LabModelo.setEnabled(true);
            LabTexto.setEnabled(true);
            verAudio.setEnabled(true);
            verVideo.setEnabled(true);
            verModelo.setEnabled(true);
        }
        else{
            LabAudio.setEnabled(false);
            LabVideo.setEnabled(false);
            LabModelo.setEnabled(false);
            LabTexto.setEnabled(false);
            verAudio.setEnabled(false);
            verVideo.setEnabled(false);
            verModelo.setEnabled(false);
        }
    }
    
    private void mostrarContenido(JTextField label, String dat, String txt){
        if(dat.equals("null")){
            if("video".equals(txt)){
                Global.video = false;
                verVideo.setEnabled(false);
            }else if("audio".equals(txt)){
                Global.audio = false;
                verAudio.setEnabled(false);
            }else if("modelo".equals(txt)){
                Global.modelo3D = false;
                verModelo.setEnabled(false);
            }
            label.setText("No existe contenido.");
        }else{
            if("video".equals(txt)){
                Global.video = true;
                verVideo.setEnabled(true);
            }else if("audio".equals(txt)){
                Global.audio = true;
                verAudio.setEnabled(true);
            }else if("modelo".equals(txt)){
                Global.modelo3D = true;
                verModelo.setEnabled(true);
            }
            label.setText(dat);
        }
    }

    private static String getZonaObra(java.lang.String nombreObra) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getZonaObra(nombreObra);
    }

    private static String getContenidoZona(int idZona) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getContenidoZona(idZona);
    }

    private static String getContenidoObra(java.lang.String nombre) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getContenidoObra(nombre);
    }

    private static int borrarZona(int idZona) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.borrarZona(idZona);
    }
    
    private void CambiarImagenLabel(BufferedImage read, JLabel label){        
        //mostrar la imagen sin perder la relacion de aspecto
        float height = (float)read.getHeight();
        float width = (float)read.getWidth();
        float maxH = (float) 335;
        float maxV = (float) 250;
        float relacion = 1;
        
        if(height > width){ //imagen vertical
            relacion = height / maxV;
        }else if(width > height){ //imagen horizontal
            relacion =  width / maxH;
        }else{ //imagen cuadrada
            relacion = height / maxV;
        }
        
        Image scaledInstance = read.getScaledInstance((int)(width/relacion), (int)(height/relacion), Image.SCALE_DEFAULT);
        label.setIcon(new ImageIcon(scaledInstance));
    }

}
