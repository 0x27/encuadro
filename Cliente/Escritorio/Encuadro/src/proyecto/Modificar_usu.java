/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Color;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import proyecto.clases.Global;
import proyecto.clases.Validador;

/**
 *
 * @author HP
 */
public class Modificar_usu extends javax.swing.JFrame {
    ProcesandoPeticion prc = new ProcesandoPeticion();
     
    /**
     * Creates new form Modificar_usu
     */
    public Modificar_usu() {
        Image ico = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(ico);
        initComponents();
        this.setLocationRelativeTo(null);
        prc.setLocationRelativeTo(null);
        prc.setVisible(true);
        Lista();
        pass_mod.setVisible(false);
        prc.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        id_usuario = new javax.swing.JLabel();
        nom_mod = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ape_mod = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ci_mod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        email_mod = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nick_mod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tipoUs_mod = new javax.swing.JComboBox();
        Modificar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        combo_usuarios = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        actualizar = new javax.swing.JButton();
        pass_mod = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Modificar Usuario");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Id usuario:");

        id_usuario.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        id_usuario.setText("-");

        nom_mod.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre:");

        ape_mod.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ape_mod.setName("ape_mod"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Apellido:");

        ci_mod.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ci_mod.setName("ci_mod"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("CI:");

        email_mod.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        email_mod.setName("email_mod"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Email:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Nick:");

        nick_mod.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        nick_mod.setName("nick_mod"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tipo Usuario:");

        tipoUs_mod.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tipoUs_mod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrador", "Empleado" }));

        Modificar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Modificar.setText("Modificar");
        Modificar.setToolTipText("Guardar los cambios en el sistema");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        Cancelar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Cancelar.setText("Cancelar");
        Cancelar.setToolTipText("Descartar los cambios y cerrar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        combo_usuarios.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        combo_usuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Selecciona -" }));
        combo_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_usuariosActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Usuario a modificar:");

        actualizar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        actualizar.setText("Actualizar lista");
        actualizar.setToolTipText("Recargar la lista de usuarios");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(actualizar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nick_mod)
                                    .addComponent(email_mod)
                                    .addComponent(ape_mod)
                                    .addComponent(id_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nom_mod)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(ci_mod, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(combo_usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(23, 23, 23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoUs_mod, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(pass_mod)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nom_mod)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ape_mod)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ci_mod)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(email_mod)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nick_mod)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoUs_mod))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Modificar)
                    .addComponent(Cancelar))
                .addGap(18, 18, 18)
                .addComponent(pass_mod))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // TODO add your handling code here:
        if(combo_usuarios.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(rootPane, "Debes seleccionar un usuario para modificarlo");
        }else{
            Boolean error = false;

            //VALIDACION DE LOS DATOS DEL FORM

            //NOMBRE
            if("".equals(nom_mod.getText())){
                nom_mod.setBackground(Color.pink);
                nom_mod.setToolTipText("Debes completar este campo");
                error = true;
            }else{
                nom_mod.setBackground(Color.white);
                nom_mod.setToolTipText(null);
            }
            //APELLIDO
            if("".equals(ape_mod.getText())){
                ape_mod.setBackground(Color.pink);
                ape_mod.setToolTipText("Debes completar este campo");
                error = true;
            }else{
                ape_mod.setBackground(Color.white);
                ape_mod.setToolTipText(null);
            }
            //CEDULA
            if("".equals(ci_mod.getText())){ //vacio
                ci_mod.setBackground(Color.pink);
                ci_mod.setToolTipText("Debes completar este campo");
                error = true;
            }else if(ci_mod.getText().length() < 8 || ci_mod.getText().length() > 8){ //largo incorrecto
                ci_mod.setBackground(Color.pink);
                ci_mod.setToolTipText("El largo debe ser de 8 cifras, no se admiten puntos ni guiones");
                error = true;
            }else if(!Validador.isNumeric(ci_mod.getText())){ //no numerico
                ci_mod.setBackground(Color.pink);
                ci_mod.setToolTipText("Sólo se admiten números");
                error = true;
            }else{
                int ci = 0; 
                ci =  Integer.parseInt(ci_mod.getText());
                int u = 0;
                u = Validador.validarCedula(ci);
                if (u == 1){
                    ci_mod.setBackground(Color.white);
                    ci_mod.setToolTipText("La CI es válida");}
                else{
                    ci_mod.setBackground(Color.pink);
                    ci_mod.setToolTipText("La CI no es válida. Verifícala.");
                    error = true;
                }
            }
            //EMAIL
            if("".equals(email_mod.getText())){ //vacio
                email_mod.setBackground(Color.pink);
                email_mod.setToolTipText("Debes completar este campo");
                error = true;
            }else if(!Validador.isEmail(email_mod.getText())){ //formato incorrecto
                email_mod.setBackground(Color.pink);
                email_mod.setToolTipText("El formato de email es incorrecto");
                error = true;
            }else{
                email_mod.setBackground(Color.white);
                email_mod.setToolTipText(null);
            }
            //NICK
            if("".equals(nick_mod.getText())){ //vacio
                nick_mod.setBackground(Color.pink);
                nick_mod.setToolTipText("Debes completar este campo");
                error = true;
            }else{
                nick_mod.setBackground(Color.white);
                nick_mod.setToolTipText(null);
            }
            //GUARDAR CAMBIOS
            if(error == false){
                int resultado = ModUsu();

                if(resultado == 0){
                    if(JOptionPane.showConfirmDialog(rootPane, "Usuario modificado con éxito.\n¿Deseas modificar otro?") == JOptionPane.YES_OPTION){
                        if(LimpiarLista()){
                            Lista();
                        }
                        LimpiarForm();
                    }else{
                        this.dispose();
                    }
                }else if(resultado == -1){
                    JOptionPane.showMessageDialog(rootPane,"El Nick ya se está utilizando.\nPor favor intenta con otro.");
                    nick_mod.setBackground(Color.pink);
                    nick_mod.setToolTipText("El nick ya existe, intenta con otro");
                }else{
                    JOptionPane.showMessageDialog(rootPane,"El Id ya se está utilizando.\nCierra la ventana y vuelve a intentarlo.");
                }
                /* -1 nick ya existe, -2 id se esta utilizando, 0 ok */                      
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debes corregir los errores para guardar los datos.", "Error en el formulario", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_ModificarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "¿Actualizar lista de usuarios?\nSe perderá cualquier cambio no guardado.") == JOptionPane.YES_OPTION){
            if(LimpiarLista()){
                Lista();
            }
            LimpiarForm();
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "¿Cerrar ventana de modificación?\nSe perderá cualquier cambio no guardado.") == JOptionPane.YES_OPTION){
            LimpiarForm();
            this.dispose();
        }
    }//GEN-LAST:event_CancelarActionPerformed

    private void combo_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_usuariosActionPerformed
        // TODO add your handling code here:
        if(combo_usuarios.getSelectedIndex() != 0){
            prc.setVisible(true);
            CargarDatos();
        }else{
            LimpiarForm();
        }
    }//GEN-LAST:event_combo_usuariosActionPerformed

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modificar_usu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modificar_usu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modificar_usu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modificar_usu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modificar_usu().setVisible(true);
            }
        });
    }
    
    public void Lista(){
        String e;
        String list = getUsuarios();
        String[] games = list.split("=>");
        // DefaultListModel model = new DefaultListModel();
        
        for (int i=0;i<games.length;i++){
            e = games[i];
            combo_usuarios.addItem(e);
        }
        prc.dispose();
    }
    
    /**
     * Guarda en la BD los datos modificados de un usuario
     */
    public int ModUsu(){
        int id_entero = Integer.parseInt(id_usuario.getText());   
        int tipo = tipoUs_mod.getSelectedIndex() + 1;
        //Global.IDUsu = id_entero;     
        //Global.TipoUs = tipo;

        int fi = modificarUsuario(nom_mod.getText(),ape_mod.getText(),ci_mod.getText(),email_mod.getText(),tipo,nick_mod.getText(), pass_mod.getText(), id_entero);

        if(fi == -1 ){
            return -1;
        }else if(fi == -2){
            return  -2;
            // que controle solo lo de nicky, el usuario no puede modificar su id.
        }else{
            return 0;
        }
    }
    
     /**
      * Carga en los campos del formulario los datos del usuario seleccionado en el combo
      */
     public void CargarDatos(){
        int c = 0;
        String li = combo_usuarios.getSelectedItem().toString();
        String data = getDataUsuario(li);
        String[] gamess = data.split("=>");
        for (int x=0; x < gamess.length; x++){
            String usu = gamess[x];
            c++;
            int index = 0;
            
            if(c == 1){
                nom_mod.setText(usu);
            }else{
                if (c == 2){
                    ape_mod.setText(usu);
                }else{
                    if ( c == 3 ){
                      ci_mod.setText(usu);
                    }else{
                        if ( c == 4 ){
                            email_mod.setText(usu);
                        }else{
                            if ( c == 5 ){
                                index = Integer.parseInt(usu)-1;
                                tipoUs_mod.setSelectedIndex(index);
                            }else{
                                if (c == 6){
                                  nick_mod.setText(usu);
                                }else{
                                    if(c == 7){
                                      pass_mod.setText(usu);
                                    }else{
                                        if(c == 8){
                                            id_usuario.setText(usu);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } 
        }
        data = null;
        prc.dispose();
     }
     
     /**
      * Limpia los datos del formulario
      */
    public void LimpiarForm(){
        id_usuario.setText("-");
        
        nom_mod.setText(null);
        nom_mod.setBackground(Color.white);
        nom_mod.setToolTipText(null);
        
        ape_mod.setText(null);
        ape_mod.setBackground(Color.white);
        ape_mod.setToolTipText(null);
        
        ci_mod.setText(null);
        ci_mod.setBackground(Color.white);
        ci_mod.setToolTipText(null);
        
        email_mod.setText(null);
        email_mod.setBackground(Color.white);
        email_mod.setToolTipText(null);
        
        nick_mod.setText(null);
        nick_mod.setBackground(Color.white);
        nick_mod.setToolTipText(null);

        pass_mod.setText(null);
        pass_mod.setBackground(Color.white);
        pass_mod.setToolTipText(null);
        
        combo_usuarios.setSelectedIndex(0);
    }
    
    public boolean LimpiarLista(){
        int aux = 0;
        int count = combo_usuarios.getItemCount();
        
        for(int a=1; a==count-1; a++){
            combo_usuarios.removeItemAt(a);
            System.out.println(a);
            aux++;
        }  

        if(aux == count){
            return true;
        }else{
            return false;
        }
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton actualizar;
    private javax.swing.JTextField ape_mod;
    private javax.swing.JTextField ci_mod;
    private javax.swing.JComboBox combo_usuarios;
    private javax.swing.JTextField email_mod;
    private javax.swing.JLabel id_usuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nick_mod;
    private javax.swing.JTextField nom_mod;
    private javax.swing.JLabel pass_mod;
    private javax.swing.JComboBox tipoUs_mod;
    // End of variables declaration//GEN-END:variables

    

    private static String getUsuarios() {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getUsuarios();
    }

    private static String getDataUsuario(java.lang.String nick) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getDataUsuario(nick);
    }

    private static int modificarUsuario(java.lang.String nombre, java.lang.String apellido, java.lang.String cedula, java.lang.String email, int tipoUs, java.lang.String nick, java.lang.String pass, int idUsuario) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.modificarUsuario(nombre, apellido, cedula, email, tipoUs, nick, pass, idUsuario);
    }
    
}
