
package proyecto;

import java.awt.Image;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import proyecto.clases.Global;

/**
 *
 * @author LucasMiranda
 */
public class ABMOpciones extends javax.swing.JFrame {

    String [] games12;
    boolean menOp=false;
    boolean modif=false;
    ArrayList<Integer> arrayIdOpciones = new ArrayList<Integer>();
    ArrayList<String> arrayOpciones = new ArrayList<String>();
    int modificaciones=0;
    String nommm="";
    int id_grupo=0;
    
    
    public ABMOpciones() {
        initComponents();
        Image icono = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(icono);
        String data = getOpciones();
        System.out.println(data);
        games12 = data.split("=>");
        
        System.out.println(data);
        if (games12.length>1){
        for (int i=0; i< games12.length; i++){
            if ((i)%2==0){
                listacosas.add(games12[i+1]);
            }
        }
        } else {
            this.setAlwaysOnTop(false);
            menOp=false;
            JOptionPane.showMessageDialog(null,"AÃºn no se han creado grupos de opciones!");
        }
        
        
        labelNombre.setVisible(false);
        textField1.setVisible(false);
        jButton3.setVisible(false);
        jButton5.setVisible(false);
        jButtonUp.setVisible(false);
        jButtonAdd.setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listacosas = new java.awt.List();
        labelNombre = new java.awt.Label();
        textField1 = new java.awt.TextField();
        jButtonAdd = new javax.swing.JButton();
        list2 = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButtonCrear = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonElim = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButtonUp = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ABM Grupo de Opciones");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listacosas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listacosasMouseClicked(evt);
            }
        });
        getContentPane().add(listacosas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 152, 195));

        labelNombre.setName(""); // NOI18N
        labelNombre.setText("Nombre Grupo");
        getContentPane().add(labelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 10, -1, -1));

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        getContentPane().add(textField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 10, 206, -1));

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/arrow_right.png"))); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 30, -1));
        getContentPane().add(list2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 200, 120));

        jLabel1.setText("Opciones");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, -1, -1));

        jButtonCrear.setText("Crear");
        jButtonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, -1, -1));

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, -1, -1));

        jButtonElim.setText("Eliminar");
        jButtonElim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonElimActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonElim, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/arrow_left.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 30, -1));

        jButtonUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/arrow_up.png"))); // NOI18N
        jButtonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 30, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/arrow_down.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 30, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void listacosasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listacosasMouseClicked
        //mostrar valores de opcion seleccionada
        if (menOp==false && modif==false){
            list2.removeAll();
            String datos=null;
            try {
            datos = getValoresDeOpcion(Integer.parseInt(games12[listacosas.getSelectedIndex()*2]));
            
            System.out.println("============== "+datos);

            String [] games122 = datos.split("=>");

            System.out.println(datos);
            for (int i=0; i< games122.length; i++){
                if ((i)%2==0){
                    list2.add(games122[i+1]);
                }
            }
            
            } catch(ArrayIndexOutOfBoundsException e){
                System.out.println("el elemento selecionado no es valido");
            }
            
        }
        
    }//GEN-LAST:event_listacosasMouseClicked

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        //agrega posible opcion a grupo

        int flag=1;
            for (int i=0; i<arrayIdOpciones.size();i++){
                if(listacosas.getSelectedItem().equals(arrayOpciones.get(i))){
                    flag=-1;
                    } 
            }
            if (flag==1){
        
        arrayIdOpciones.add(Integer.parseInt(games12[listacosas.getSelectedIndex()*2]));
        arrayOpciones.add(listacosas.getSelectedItem());
        list2.add(listacosas.getSelectedItem());
        System.out.println("opciones "+arrayIdOpciones);
        modificaciones++;
            } else {
            this.setAlwaysOnTop(false);
                    JOptionPane.showMessageDialog(null,"Error: Esa opcion ya ha sido agregada!");
            
            }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearActionPerformed

            if (menOp==false){//habilita pantalla para creacion de grupo
            menOp=true;
            //hacer visibles cosas para crear grupo de opciones
            textField1.setVisible(true);
            textField1.setText("");
            labelNombre.setVisible(true);
            jButtonAdd.setVisible(true);
            jButton3.setVisible(true);
            jButton5.setVisible(true);
            jButtonUp.setVisible(true);
            jButtonElim.setEnabled(false);
            jButtonModificar.setEnabled(false);
                        
            //listar valores
            list2.removeAll();
            listacosas.removeAll();
            
            String data = getValoresDeOpciones();
            System.out.println(data);
            games12 = data.split("=>");

            System.out.println(data);
            if (games12.length>1){
            for (int i=0; i< games12.length; i++){
                if ((i)%2==0){
                    listacosas.add(games12[i+1]);
                }
            }
            }else {
                menOp=false;
                JOptionPane.showMessageDialog(null,"AÃºn no se han creado opciones!");
            }
        }else{//habilita para crear grupo
            
            if (!textField1.getText().equals("")){
                //crear grupo de opciones

                if (arrayIdOpciones.size()>1){
                    int id_opc = setOpcion(textField1.getText());
                    for (int j=0; j<arrayIdOpciones.size();j++){
                        System.out.println("asociando opcion "+id_opc+" con valor "+arrayIdOpciones.get(j));
                        asociarOpcionesConValores(id_opc, arrayIdOpciones.get(j));
                    }
                    this.setAlwaysOnTop(false);
                    JOptionPane.showMessageDialog(null,"Opcion agregada satisfactoriamente!");
                    
                    this.dispose();
                    ABMOpciones o = new ABMOpciones();
                    o.setVisible(true);
                    o.setLocationRelativeTo(null);
                    o.setAlwaysOnTop(true);
                } else {
                    //error tiene que agregar mas de 1 opciones
                    this.setAlwaysOnTop(false);
                    JOptionPane.showMessageDialog(null,"Error: Debe agregar al menos dos Opciones para crear el Grupo!");
                }
            }  else{
                //error grupo no tiene nombre
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null,"Error: El grupo debe tener un nombre!");
                
                }
        }
    }//GEN-LAST:event_jButtonCrearActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if (menOp==false){
        if (modif==false){
            if (listacosas.getSelectedIndex()!=-1){
            modif=true;
            jButtonModificar.setText("Confirmar");
            textField1.setVisible(true);
            labelNombre.setVisible(true);
            jButton3.setVisible(true);
            jButton5.setVisible(true);
            jButtonUp.setVisible(true);
            jButtonAdd.setVisible(true);
            jButtonCrear.setEnabled(false);
            jButtonElim.setEnabled(false);
            
            textField1.setText(listacosas.getSelectedItem());
            nommm=listacosas.getSelectedItem();
            
            id_grupo= Integer.parseInt(games12[listacosas.getSelectedIndex()*2]);
            
            
            list2.removeAll();
            listacosas.removeAll();
            
            String data = getValoresDeOpciones();
            System.out.println(data);
            games12 = data.split("=>");

            System.out.println(data);
            if (games12.length>1){
            for (int i=0; i< games12.length; i++){
                if ((i)%2==0){
                    listacosas.add(games12[i+1]);
                }
            }
            }
            
            
            //traer datos del grupo
            String datos = getDatosOpcion(id_grupo);
            System.out.println("///////"+datos);
            String [] vals = datos.split("=>");
            
            for (int w=0; w<vals.length; w++){
                if (w%2==0){
                    arrayIdOpciones.add(Integer.parseInt(vals[w]));
                } else {
                    arrayOpciones.add(vals[w]);
                    list2.add(vals[w]);
                }
                
                System.out.println("ids"+arrayIdOpciones);
                System.out.println("opciones"+arrayOpciones);
                
            }
            
            } else {
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null,"Error: Debe seleccionar un Grupo de Opciones para Modificar");
                
            }
        } else{
            if ( (!(textField1.getText().equals(nommm))  && !(textField1.getText().equals(""))) || modificaciones>0){
                this.setAlwaysOnTop(false);
                if(JOptionPane.showConfirmDialog(rootPane, "Advertencia: Esta modificacion se verÃ¡ reflejada en cada lugar donde este Grupo de Opciones aparece! Desea confirmar los cambios?") == JOptionPane.YES_OPTION){
                    System.out.println("id grupo val----"+id_grupo);
                    int fl=-1;
                    if ( !(textField1.getText().equals(nommm))  && !(textField1.getText().equals(""))){
                    fl = setOpcionn(String.valueOf(id_grupo), textField1.getText());

                    }

                    if (modificaciones>0){
                        //
                        int borr = borrarRelacionOpcionesValor(id_grupo);

                        for (int j=0; j<arrayIdOpciones.size();j++){
                            asociarOpcionesConValores(id_grupo, arrayIdOpciones.get(j));
                        }
                        fl=borr;
                    }

                    if (fl!=0){
                        this.setAlwaysOnTop(false);
                        JOptionPane.showMessageDialog(null,"Error: No se han podido realizar las modificaciones! Intente mas tarde.");
                    } else{
                        this.setAlwaysOnTop(false);
                        JOptionPane.showMessageDialog(null,"Se realizaron los cambios exitosamente!");

                        this.dispose();
                        ABMOpciones v = new ABMOpciones();
                        v.setVisible(true);
                        v.setLocationRelativeTo(null);
                        v.setAlwaysOnTop(true);
                    }
                }

            } else {
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null,"Error: No se han realizado modificaciones!");
                }
            }
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonElimActionPerformed

        //ver si es usado en alguna pregunta (devuelve mayor 0 si true// 9999 = error)
        int asociaciones = isGrupoOpcAsociadoAPreguntas(games12[listacosas.getSelectedIndex()*2]);
        System.out.println("--------------asociaciones "+asociaciones);
        if (asociaciones<1 && asociaciones!=9999){
            //eliminar
            System.out.println("eliminaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaar");
            int b = borrarOpcion(Integer.parseInt(games12[listacosas.getSelectedIndex()*2]));
            
            if (b==0){
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null,"El Grupo de Opciones fue Correctamente Eliminado!");
                
                this.dispose();
                ABMOpciones v = new ABMOpciones();
                v.setVisible(true);
                v.setLocationRelativeTo(null);
                v.setAlwaysOnTop(true);
            }
            
            
            
        } else {
            this.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null,"Error: Este Grupo de Opciones es usado en alguna Pregunta! No es posible eliminarlo hasta no desvincularlo de esa/s Pregunta/s."); 
        }
        
        
    }//GEN-LAST:event_jButtonElimActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        modificaciones++;
        arrayIdOpciones.remove(list2.getSelectedIndex());
        arrayOpciones.remove(list2.getSelectedIndex());
        
        list2.removeAll();
        for (int j=0; j<arrayIdOpciones.size(); j++){
                    list2.add(arrayOpciones.get(j));
                }
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpActionPerformed
        modificaciones++;
        // subir
        if (list2.getSelectedIndex()!=-1){
            if (list2.getSelectedIndex()!=0){
                modificaciones++;
                //item seleccionado
                int id_selected=arrayIdOpciones.get(list2.getSelectedIndex());
                String preg_sel=arrayOpciones.get(list2.getSelectedIndex());
                
                
                //copiar el de arriba abajo
                arrayIdOpciones.set(list2.getSelectedIndex(),arrayIdOpciones.get(list2.getSelectedIndex()-1));
                arrayOpciones.set(list2.getSelectedIndex(), arrayOpciones.get(list2.getSelectedIndex()-1));
                
                //insertar el seleccionado arriba
                arrayIdOpciones.set(list2.getSelectedIndex()-1, id_selected);
                arrayOpciones.set(list2.getSelectedIndex()-1, preg_sel);
                
                //refresh list2
                
                list2.removeAll();
                for (int j=0; j<arrayIdOpciones.size(); j++){
                    list2.add(arrayOpciones.get(j));
                }
                
            }else{
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null,"Error: Ha seleccionado la primer opcion. No puede intercambiarla por otra anterior porque no hay!");    
            }
        }else {
            this.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null,"Error: Debe seleccionar una opcion de la lista de la derecha para ser movida a una posiciÃ³n superior!");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonUpActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        modificaciones++;
        //bajar
        if (list2.getSelectedIndex()!=-1){
            if (!list2.getSelectedItem().equals(list2.getItem(arrayIdOpciones.size()-1))){
                modificaciones++;
                //item seleccionado
                int id_selected=arrayIdOpciones.get(list2.getSelectedIndex());
                String preg_sel=arrayOpciones.get(list2.getSelectedIndex());
                System.out.println("seleccionado "+preg_sel+" id "+id_selected);
                
                //copiar el de abajo en el seleccionado
                arrayIdOpciones.set(list2.getSelectedIndex(),arrayIdOpciones.get(list2.getSelectedIndex()+1));
                arrayOpciones.set(list2.getSelectedIndex(), arrayOpciones.get(list2.getSelectedIndex()+1));
                
                //insertar el seleccionado en de abjajo
                arrayIdOpciones.set(list2.getSelectedIndex()+1, id_selected);
                arrayOpciones.set(list2.getSelectedIndex()+1, preg_sel);
                
                //refresh list2
                
                list2.removeAll();
                for (int j=0; j<arrayIdOpciones.size(); j++){
                    list2.add(arrayOpciones.get(j));
                }
            }else{
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null,"Error: Ha seleccionado la ultima opcion. No puede intercambiarla por otra posterior porque no hay!");    
            }
        }else {
            this.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null,"Error: Debe seleccionar una opcion de la lista de la derecha para ser movida a una posiciÃ³n superior!");
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABMOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABMOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABMOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABMOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABMOpciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCrear;
    private javax.swing.JButton jButtonElim;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonUp;
    private javax.swing.JLabel jLabel1;
    private java.awt.Label labelNombre;
    private java.awt.List list2;
    private java.awt.List listacosas;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables

    private static String getOpciones() {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getOpciones();
    }

    private static String getValoresDeOpcion(int idOpcion) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getValoresDeOpcion(idOpcion);
    }

    private static String getValoresDeOpciones() {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getValoresDeOpciones();
    }

    private static int setOpcion(java.lang.String descripcion) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.setOpcion(descripcion);
    }

    private static int asociarOpcionesConValores(int idOpc, int valor) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.asociarOpcionesConValores(idOpc, valor);
    }

    private static int setOpcionn(java.lang.String idOpc, java.lang.String descripcion) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.setOpcionn(idOpc, descripcion);
    }

    private static int isGrupoOpcAsociadoAPreguntas(java.lang.String idGrupo) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.isGrupoOpcAsociadoAPreguntas(idGrupo);
    }

    private static int borrarOpcion(int idOpcion) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.borrarOpcion(idOpcion);
    }

    private static String getDatosOpcion(int idOpcion) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getDatosOpcion(idOpcion);
    }

    private static int borrarRelacionOpcionesValor(int idOpc) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.borrarRelacionOpcionesValor(idOpc);
    }
}
