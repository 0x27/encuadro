/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import proyecto.clases.FileUpload;
import proyecto.clases.Global;
import proyecto.clases.MediaPanelAudio;
import proyecto.clases.prbQT;
import vtk.vtkActor;
import vtk.vtkElevationFilter;
import vtk.vtkNativeLibrary;
import vtk.vtkPLYReader;
import vtk.vtkPolyDataMapper;
import vtk.vtkRenderWindow;
import vtk.vtkRenderWindowInteractor;
import vtk.vtkRenderer;

/**
 *
 * @author SysAdmin
 */
public class ListaSal extends javax.swing.JFrame {
    private final DefaultListModel model1;
    String[] games3 = null;
    int co = 0;
    ImagenLabel il2 = null;
    int y = 0;
    ProcesandoPeticion prc = new ProcesandoPeticion();
    
//    static {
//        if (!vtkNativeLibrary.LoadAllNativeLibraries()) {
//            for (vtkNativeLibrary lib : vtkNativeLibrary.values()) {
//                if (!lib.IsLoaded()) {
//                    System.out.println(lib.GetLibraryName() + " not loaded");
//                }
//            }
//        }
//        vtkNativeLibrary.DisableOutputWindow(null);
//    }
    
    /**
     * Creates new form ListaSal
     */
    public ListaSal() {
        Image ico = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(ico);
        initComponents();
        prc.setLocationRelativeTo(null);
        prc.setVisible(true);
        model1 = new DefaultListModel();
        this.setLocationRelativeTo(null);
        listay.setModel(model1);
        ActualizarLista();
        print_qr.setEnabled(false);
        
        File path = new File(Global.directorioLocal + "/qr_default.jpg");
        //imagen por defecto de label QR
        CambiarImagenLabel(path, qr_lbl);
        au_btn.setEnabled(false);
        vi_btn.setEnabled(false);
        im_btn.setEnabled(false);
        mod_btn.setEnabled(false);
        prc.dispose();
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        actualizar_lista = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listay = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        id_txt = new javax.swing.JTextField();
        nom_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_txt = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        im_txt = new javax.swing.JTextField();
        vi_txt = new javax.swing.JTextField();
        au_txt = new javax.swing.JTextField();
        mod_txt = new javax.swing.JTextField();
        im_btn = new javax.swing.JButton();
        vi_btn = new javax.swing.JButton();
        au_btn = new javax.swing.JButton();
        mod_btn = new javax.swing.JButton();
        qr_lbl = new javax.swing.JLabel();
        print_qr = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        des_txt = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        btn_cerrar = new javax.swing.JButton();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listar Salas");
        setAlwaysOnTop(true);
        setResizable(false);

        actualizar_lista.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        actualizar_lista.setText("Actualizar Lista");
        actualizar_lista.setToolTipText("Recargar la lista de salas");
        actualizar_lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizar_listaActionPerformed(evt);
            }
        });

        listay.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        listay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listay);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Id :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Descripci√≥n:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre :");

        id_txt.setEditable(false);
        id_txt.setBackground(new java.awt.Color(255, 255, 255));
        id_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        nom_txt.setEditable(false);
        nom_txt.setBackground(new java.awt.Color(255, 255, 255));
        nom_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Listar Salas");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Imagen :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Video :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Audio :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Modelo 3D :");

        txt_txt.setEditable(false);
        txt_txt.setColumns(20);
        txt_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txt_txt.setLineWrap(true);
        txt_txt.setRows(5);
        txt_txt.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txt_txt);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Texto :");

        im_txt.setEditable(false);
        im_txt.setBackground(new java.awt.Color(255, 255, 255));
        im_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        vi_txt.setEditable(false);
        vi_txt.setBackground(new java.awt.Color(255, 255, 255));
        vi_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        au_txt.setEditable(false);
        au_txt.setBackground(new java.awt.Color(255, 255, 255));
        au_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        au_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                au_txtActionPerformed(evt);
            }
        });

        mod_txt.setEditable(false);
        mod_txt.setBackground(new java.awt.Color(255, 255, 255));
        mod_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        im_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        im_btn.setText("Ver");
        im_btn.setToolTipText("Visualizar la imagen asociada");
        im_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                im_btnActionPerformed(evt);
            }
        });

        vi_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        vi_btn.setText("Ver");
        vi_btn.setToolTipText("Visualizar el video asociado");
        vi_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vi_btnActionPerformed(evt);
            }
        });

        au_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        au_btn.setText("Ver");
        au_btn.setToolTipText("Reproducir el audio asociado");
        au_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                au_btnActionPerformed(evt);
            }
        });

        mod_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mod_btn.setText("Ver");
        mod_btn.setToolTipText("Visualizar el modelo asociado");
        mod_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mod_btnActionPerformed(evt);
            }
        });

        qr_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qr_lbl.setBorder(nom_txt.getBorder());
        qr_lbl.setPreferredSize(new java.awt.Dimension(202, 198));

        print_qr.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        print_qr.setText("Imprimir");
        print_qr.setToolTipText("Imprimir el c√≥digo QR de la Sala");
        print_qr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_qrActionPerformed(evt);
            }
        });

        des_txt.setEditable(false);
        des_txt.setColumns(20);
        des_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        des_txt.setLineWrap(true);
        des_txt.setRows(5);
        des_txt.setWrapStyleWord(true);
        jScrollPane3.setViewportView(des_txt);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("C√≥digo QR:");

        btn_cerrar.setText("Cerrar");
        btn_cerrar.setToolTipText("Cerrar esta ventana");
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(830, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actualizar_lista, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mod_txt)
                            .addComponent(jScrollPane2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                            .addComponent(nom_txt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(au_txt, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vi_txt)
                            .addComponent(im_txt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mod_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(au_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vi_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(im_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(print_qr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(qr_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(actualizar_lista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nom_txt))
                                .addGap(339, 339, 339))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(qr_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(print_qr)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(349, 349, 349)
                                        .addComponent(btn_cerrar))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(au_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(vi_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(vi_btn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(im_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(im_btn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mod_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mod_btn)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(au_btn)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))
                            .addComponent(jScrollPane2))))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizar_listaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizar_listaActionPerformed
        // TODO add your handling code here:
        prc.setVisible(true);
        
        //limpiar formulario
        id_txt.setText(null);
        nom_txt.setText(null);
        des_txt.setText(null);
        au_txt.setText(null);
        vi_txt.setText(null);
        im_txt.setText(null);
        mod_txt.setText(null);
        txt_txt.setText(null);
        print_qr.setEnabled(false);

        File path = new File(Global.directorioLocal + "/qr_default.jpg");
        //imagen por defecto de label QR
        CambiarImagenLabel(path, qr_lbl);
        
        //actualizar la lista de salas
        ActualizarLista();
        au_btn.setEnabled(false);
        vi_btn.setEnabled(false);
        im_btn.setEnabled(false);
        mod_btn.setEnabled(false);
    }//GEN-LAST:event_actualizar_listaActionPerformed

    private void listayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listayMouseClicked
        // TODO add your handling code here:
        int c = 0;
        int c1 = 0;
        String x = null;
        String sel = (String) model1.get(listay.getSelectedIndex());
        String data = getDataSalaNombre(sel);
        String[] games1 = data.split("=>");
        
        for (int r=0; r<games1.length; r++){
            x = games1[r];
            c++;
            if(c == 1) {
                id_txt.setText(x);
                Global.IdSala = Integer.parseInt(id_txt.getText());
            }else{
                if (c == 2) {
                    des_txt.setText(x);
                    nom_txt.setText(sel);
                }
            }
        }
        
        String contenidos = getContenidoSala (Global.IdSala);   
        games3 = contenidos.split("=>");
        for (int r=0; r<games3.length; r++){
            x = games3[r];
            c1++;
            if(c1 == 1) {
                mostrarContenido(au_txt, x, au_btn);
            }else{
                if (c1 == 2) {
                    mostrarContenido(vi_txt, x, vi_btn);
                }else{
                    if ( c1 == 5 ) {
                        mostrarContenido(im_txt, x, im_btn);
                    }else{
                        if ( c1 == 4 ) {
                            mostrarContenido(mod_txt, x, mod_btn);
                        }else{
                            if (c1 == 3) {
                                if("null".equals(x)){
                                    txt_txt.setText("No existe contenido.");
                                }else{
                                    txt_txt.setText(x);  
                                }
                            }
                        }
                    }
                }
            }
        }
          
        File imagen = new File (Global.directorioTemporal + "/qr.gif");
        String dir = Global.IdSala+"/imagen/";
        Global.fileInputStream = null;
        
        try {           
            FileUpload.download("ftp://salas:12345678@10.0.2.109/"+Global.IdSala+"/imagen/qr.gif", imagen);
        } catch (MalformedURLException ex1) {
            Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex1);
        } catch (IOException ex1) {
            Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex1);
        }
        
        try {
            Global.fileInputStream = new FileInputStream (imagen);
        } catch (FileNotFoundException ex1) {
            Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex1);
        }

             
        //imagen = new File (Global.directorioTemporal + "\\qr.gif");
        ImageIcon img = null;
        img = new ImageIcon (imagen.getPath());
        img.getImage().flush();
        //int h = img.getIconHeight();
        //int w = img.getIconWidth();
        //qr_lbl.setSize(w , h);
        qr_lbl.setIcon(img);
        print_qr.setEnabled(true);
    }//GEN-LAST:event_listayMouseClicked

    private void im_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_im_btnActionPerformed
        // TODO add your handling code here:
        if(im_txt.getText().equals("") || im_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Imagen.");      
        }else{
            File imagen = new File (Global.directorioTemporal + "\\imatemp.jpg");
            String dir = Global.IdSala+"/imagen/";
            //System.out.println(imagen.getName());
            
            try {        
                FileUpload.download(games3[4], imagen);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                ImageIcon img = new ImageIcon (imagen.toURL());   
                int h = img.getIconHeight();
                int w = img.getIconWidth();
                Global.lab.setSize(w, h);
                Global.lab.setIcon(img);
                il2 = new ImagenLabel();
                il2.setSize(w, h);
                il2.setVisible(true);
                il2.setAlwaysOnTop(true);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }           
        }
    }//GEN-LAST:event_im_btnActionPerformed

    private void au_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_au_btnActionPerformed
        // TODO add your handling code here:
        MediaPanelAudio mediaPanel = null;
        if(au_txt.getText().equals("") || au_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Audio.");      
        }else{
            File audio = new File (Global.directorioTemporal + "\\audio.mp3");
            String dir = Global.IdSala+"/audio/";
            try {        
                FileUpload.download(games3[0], audio);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            URL newurl = null;
            try {
                newurl = audio.toURL();
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
            mediaPanel = new MediaPanelAudio( newurl );
        }
    }//GEN-LAST:event_au_btnActionPerformed

    private void vi_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vi_btnActionPerformed
        // TODO add your handling code here:
       // MediaPanel mediaPanel = null;
        if(vi_txt.getText().equals("") || vi_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Video.");      
        }else{
           Global.fvid = new File (Global.directorioTemporal + "\\video.mov");
            String dir = Global.IdSala+"/video/";
            try {        
                FileUpload.download(games3[1], Global.fvid);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }            
          
            prc.dispose();
               
             prbQT frame = new prbQT("Simple QTJ Player"); 
             frame.pack(); 
             frame.setVisible(true); 
        try { 
            frame.movie.start(); 
           
        } catch (Exception e) { 
            e.printStackTrace(); 
        } 
            
     }
    }//GEN-LAST:event_vi_btnActionPerformed

    private void mod_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mod_btnActionPerformed
        // TODO add your handling code here:
        if(mod_txt.getText().equals("") || mod_txt.getText().equals("null")){
            JOptionPane.showMessageDialog(rootPane, "La sala no contiene Modelo 3D.");     
        }else{
            File modelo = new File (Global.directorioTemporal + "\\modelo.ply");
            String dir = Global.IdSala+"/modelo/";
            try {       
                FileUpload.download(games3[3], modelo);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }  
//            Global.modelo3D = true;
            vtkRenderer render = new vtkRenderer();
            vtkRenderWindow renderWindow = new vtkRenderWindow();
            renderWindow.AddRenderer(render);
            vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
            renderWindowInteractor.SetRenderWindow(renderWindow);
            vtkPLYReader mod = new vtkPLYReader();
            mod.SetFileName(modelo.getAbsolutePath());
            mod.Update();
            vtkElevationFilter colorIt = new vtkElevationFilter();
            colorIt.SetInput(mod.GetOutput());
            colorIt.SetLowPoint(0, 0, -1);
            colorIt.SetHighPoint(0, 0, 1);
            vtkPolyDataMapper point = new vtkPolyDataMapper();
            point.SetInputConnection(mod.GetOutputPort());
            vtkActor actor = new vtkActor();
            actor.SetMapper(point);
            render.AddActor(actor);
            render.SetBackground(1, 1, 1);
            renderWindow.SetSize(500, 500);
            renderWindow.SetPosition(450, 200);
            renderWindow.Render();
            renderWindowInteractor.Start();
            render.Delete();
            renderWindow.Delete();
            renderWindowInteractor.Delete();
            mod.Delete();
            colorIt.Delete();
            actor.Delete();
        }
    }//GEN-LAST:event_mod_btnActionPerformed

    private void print_qrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_qrActionPerformed
        // TODO add your handling code here:
         if(JOptionPane.showConfirmDialog(rootPane, "¬øImprimir el C√≥digo QR generado?\nSe enviar√° 1 copia a la impresora.") == JOptionPane.YES_OPTION){
            //System.out.println("entro1");
            if( Global.fileInputStream != null ){
                try {
                    //atributos de la impresora
                    PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
                    pras.add(new Copies(1));
                    //Impresora configurada del sistema
                    PrintService ps = PrintServiceLookup.lookupDefaultPrintService();

                    DocPrintJob docPrintJob = ps.createPrintJob();
                    Doc doc = new SimpleDoc(Global.fileInputStream, DocFlavor.INPUT_STREAM.GIF, null);
                    docPrintJob.print(doc, pras);
                    Global.fileInputStream.close();
                } catch (PrintException ex) {
                    System.out.println(ex);
                } catch (IOException ex) {
                    System.out.println(ex);
                }  finally {
                    try {
                        Global.fileInputStream.close();
                    } catch (IOException ex) {
                        System.out.println(ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_print_qrActionPerformed

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cerrarActionPerformed

    private void au_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_au_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_au_txtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaSal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaSal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaSal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaSal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaSal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar_lista;
    private javax.swing.JButton au_btn;
    private javax.swing.JTextField au_txt;
    private javax.swing.JButton btn_cerrar;
    private javax.swing.JTextArea des_txt;
    private javax.swing.JTextField id_txt;
    private javax.swing.JButton im_btn;
    private javax.swing.JTextField im_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listay;
    private javax.swing.JButton mod_btn;
    private javax.swing.JTextField mod_txt;
    private javax.swing.JTextField nom_txt;
    private javax.swing.JButton print_qr;
    private javax.swing.JLabel qr_lbl;
    private javax.swing.JTextArea txt_txt;
    private javax.swing.JButton vi_btn;
    private javax.swing.JTextField vi_txt;
    // End of variables declaration//GEN-END:variables

    private static String getNombreSalas() {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getNombreSalas();
    }

    private static String getDataSalaNombre(java.lang.String nombre) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getDataSalaNombre(nombre);
    }

    private static String getContenidoSala(int id) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.getContenidoSala(id);
    }

    private void ActualizarLista(){
        String e;
        
        if (co == 0){
            String list = getNombreSalas();
            String[] games = list.split("=>");

            for (int i=0;i<games.length;i++){
                e = games[i];
                model1.addElement(e);
                //model.addElement(games[i]);
            }
            co = 1;
            //list1.setModel(model);
        }
        
        prc.dispose();
    }
 
    private void CambiarImagenLabel(File path, JLabel label){
        BufferedImage read = null;
        try {
            read = ImageIO.read(path);
        } catch (IOException ex) {
            Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        //mostrar la imagen sin perder la relacion de aspecto
        float height = (float)read.getHeight();
        float width = (float)read.getWidth();
        float maxH = (float) 180;
        float maxV = (float) 180;
        float relacion = 1;
        
        if(height > width){ //imagen vertical
            relacion = height / maxV;
        }else if(width > height){ //imagen horizontal
            relacion =  width / maxH;
        }else{ //imagen cuadrada
            relacion = height / maxV;
        }
        
        //Image scaledInstance = read.getScaledInstance(290, 230, Image.SCALE_DEFAULT);
        Image scaledInstance = read.getScaledInstance((int)(width/relacion), (int)(height/relacion), Image.SCALE_DEFAULT);
        //im.getImage().flush();
        label.setIcon(new ImageIcon(scaledInstance));
    }

    private void mostrarContenido(JTextField label, String dat, JButton bot){
        if(dat.equals("null")){
            label.setText("No existe contenido.");
            bot.setEnabled(false);
        }else{
            label.setText(dat);
            bot.setEnabled(true);
        }
    }
}
