/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import com.barcodelib.barcode.QRCode;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import proyecto.clases.FileUpload;
import proyecto.clases.Global;
import proyecto.clases.MediaPanelAudio;
import proyecto.clases.prbQT;
import vtk.vtkActor;
import vtk.vtkElevationFilter;
import vtk.vtkNativeLibrary;
import vtk.vtkPLYReader;
import vtk.vtkPolyDataMapper;
import vtk.vtkRenderWindow;
import vtk.vtkRenderWindowInteractor;
import vtk.vtkRenderer;

/**
 *
 * @author SysAdmin
 */
public class AltaSala extends javax.swing.JFrame {

    /**
     * Creates new form AltaSala
     */
//        static {
//            if (vtkNativeLibrary.LoadAllNativeLibraries()) {
//            } else {
//                for (vtkNativeLibrary lib : vtkNativeLibrary.values()) {
//                    if (!lib.IsLoaded()) {
//                        System.out.println(lib.GetLibraryName() + " not loaded");
//                    }
//                }
//            }
//            vtkNativeLibrary.DisableOutputWindow(null);
//        }
        
    public AltaSala() {
        Image ico = new ImageIcon(Global.directorioLocal + "\\museo.png").getImage();
        setIconImage(ico);
        initComponents();
        this.setLocationRelativeTo(null);
        HabilitarFormSala();
        DeshabilitarFormContenido();
        
        File path = new File(Global.directorioLocal + "/qr_default.jpg");
        //imagen por defecto de label QR
        CambiarImagenLabel(path, qr_lbl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tex_txt = new javax.swing.JTextArea();
        aud_btn = new javax.swing.JButton();
        vid_btn = new javax.swing.JButton();
        img_btn = new javax.swing.JToggleButton();
        img_txt = new javax.swing.JTextField();
        vid_txt = new javax.swing.JTextField();
        aud_txt = new javax.swing.JTextField();
        mod_btn = new javax.swing.JButton();
        mod_txt = new javax.swing.JTextField();
        Titulo_Cont = new javax.swing.JLabel();
        AgC_btn = new javax.swing.JButton();
        Cancelar_Cont = new javax.swing.JButton();
        img_chk = new javax.swing.JCheckBox();
        vid_chk = new javax.swing.JCheckBox();
        aud_chk = new javax.swing.JCheckBox();
        mod_chk = new javax.swing.JCheckBox();
        tex_chk = new javax.swing.JCheckBox();
        img_ver_btn = new javax.swing.JToggleButton();
        vid_ver_btn = new javax.swing.JToggleButton();
        aud_ver_btn = new javax.swing.JToggleButton();
        mod_ver_btn = new javax.swing.JToggleButton();
        Panel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nom_txt = new javax.swing.JTextField();
        AgregarS_btn = new javax.swing.JButton();
        Cancelar_Sala = new javax.swing.JButton();
        idl = new javax.swing.JLabel();
        Titulo_Sala = new javax.swing.JLabel();
        id_sa = new javax.swing.JLabel();
        JScrollPane2 = new javax.swing.JScrollPane();
        des_txt = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        qr_lbl = new javax.swing.JLabel();
        idl1 = new javax.swing.JLabel();
        imprimir_codigo_btn = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Sala");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(566, 696));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Agregar Sala");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(543, 331));

        tex_txt.setColumns(20);
        tex_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tex_txt.setLineWrap(true);
        tex_txt.setRows(5);
        tex_txt.setWrapStyleWord(true);
        jScrollPane1.setViewportView(tex_txt);

        aud_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        aud_btn.setText("Modificar");
        aud_btn.setToolTipText("Buscar un audio para agregar");
        aud_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aud_btnActionPerformed(evt);
            }
        });

        vid_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        vid_btn.setText("Modificar");
        vid_btn.setToolTipText("Buscar un video para agregar");
        vid_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vid_btnActionPerformed(evt);
            }
        });

        img_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        img_btn.setText("Modificar");
        img_btn.setToolTipText("Buscar una imagen para agregar");
        img_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                img_btnActionPerformed(evt);
            }
        });

        img_txt.setEditable(false);
        img_txt.setBackground(new java.awt.Color(255, 255, 255));
        img_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        vid_txt.setEditable(false);
        vid_txt.setBackground(new java.awt.Color(255, 255, 255));
        vid_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        aud_txt.setEditable(false);
        aud_txt.setBackground(new java.awt.Color(255, 255, 255));
        aud_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        mod_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mod_btn.setText("Modificar");
        mod_btn.setToolTipText("Buscar una modelo 3D para agregar");
        mod_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mod_btnActionPerformed(evt);
            }
        });

        mod_txt.setEditable(false);
        mod_txt.setBackground(new java.awt.Color(255, 255, 255));
        mod_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        Titulo_Cont.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Titulo_Cont.setText("2 - Agregar Contenidos");

        AgC_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        AgC_btn.setText("Agregar Contenidos");
        AgC_btn.setToolTipText("Guardar los cambios en el sistema");
        AgC_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgC_btnActionPerformed(evt);
            }
        });

        Cancelar_Cont.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Cancelar_Cont.setText("Cancelar");
        Cancelar_Cont.setToolTipText("Descartar los cambios y cerrar");
        Cancelar_Cont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancelar_ContActionPerformed(evt);
            }
        });

        img_chk.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        img_chk.setText("Imagen:");
        img_chk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                img_chkActionPerformed(evt);
            }
        });

        vid_chk.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        vid_chk.setText("Video:");
        vid_chk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vid_chkActionPerformed(evt);
            }
        });

        aud_chk.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        aud_chk.setText("Audio:");
        aud_chk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aud_chkActionPerformed(evt);
            }
        });

        mod_chk.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mod_chk.setText("Modelo 3D:");
        mod_chk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mod_chkActionPerformed(evt);
            }
        });

        tex_chk.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tex_chk.setText("Texto:");
        tex_chk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tex_chkActionPerformed(evt);
            }
        });

        img_ver_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        img_ver_btn.setText("Ver");
        img_ver_btn.setToolTipText("Visualizar la Imagen cargada");
        img_ver_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                img_ver_btnActionPerformed(evt);
            }
        });

        vid_ver_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        vid_ver_btn.setText("Ver");
        vid_ver_btn.setToolTipText("Reproducir el Video cargado");
        vid_ver_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vid_ver_btnActionPerformed(evt);
            }
        });

        aud_ver_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        aud_ver_btn.setText("Ver");
        aud_ver_btn.setToolTipText("Reproducir el Audio cargado");
        aud_ver_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aud_ver_btnActionPerformed(evt);
            }
        });

        mod_ver_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mod_ver_btn.setText("Ver");
        mod_ver_btn.setToolTipText("Visualizar el Modelo 3D cargado");
        mod_ver_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mod_ver_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tex_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(mod_chk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mod_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(aud_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(aud_txt))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(vid_chk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vid_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(mod_ver_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mod_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(aud_ver_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(aud_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(vid_ver_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vid_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(img_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(img_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(img_ver_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(img_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Titulo_Cont, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AgC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cancelar_Cont, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titulo_Cont, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(img_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img_btn)
                    .addComponent(img_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img_ver_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(vid_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(vid_btn)
                        .addComponent(vid_ver_btn))
                    .addComponent(vid_chk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aud_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aud_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aud_btn)
                    .addComponent(aud_ver_btn))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mod_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mod_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mod_btn)
                    .addComponent(mod_ver_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tex_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cancelar_Cont)
                    .addComponent(AgC_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        Panel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Descripción:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre:");

        nom_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        nom_txt.setMinimumSize(new java.awt.Dimension(12, 20));

        AgregarS_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        AgregarS_btn.setText("Agregar Sala");
        AgregarS_btn.setToolTipText("Guardar los cambios en el sistema");
        AgregarS_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarS_btnActionPerformed(evt);
            }
        });

        Cancelar_Sala.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Cancelar_Sala.setText("Cancelar");
        Cancelar_Sala.setToolTipText("Descartar los cambios y cerrar");
        Cancelar_Sala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancelar_SalaActionPerformed(evt);
            }
        });

        idl.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        idl.setText("Id Sala generado:");

        Titulo_Sala.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Titulo_Sala.setText("1 - Crear Sala");

        id_sa.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        id_sa.setText("-");

        des_txt.setColumns(20);
        des_txt.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        des_txt.setLineWrap(true);
        des_txt.setRows(5);
        des_txt.setWrapStyleWord(true);
        JScrollPane2.setViewportView(des_txt);

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addComponent(idl, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id_sa, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Titulo_Sala, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel1Layout.createSequentialGroup()
                        .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JScrollPane2)
                            .addComponent(nom_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AgregarS_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cancelar_Sala, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titulo_Sala, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarS_btn)
                    .addComponent(Cancelar_Sala))
                .addGap(18, 18, 18)
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idl)
                    .addComponent(id_sa))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        qr_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qr_lbl.setToolTipText("Código QR correspondiente a la Sala creada");
        qr_lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        idl1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        idl1.setText("Código QR generado:");

        imprimir_codigo_btn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        imprimir_codigo_btn.setText("Imprimir Código");
        imprimir_codigo_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimir_codigo_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idl1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(qr_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(imprimir_codigo_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idl1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(188, 188, 188))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qr_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imprimir_codigo_btn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void img_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_img_btnActionPerformed
        // TODO add your handling code here:
        this.setAlwaysOnTop(false);
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPEG", "jpeg", "JPG", "jpg");
        fileChooser.setDialogTitle("Ubicación del archivo resultante.");
        fileChooser.setFileFilter(filtro);
        int result = fileChooser.showOpenDialog(rootPane);
        
        if(result == JFileChooser.APPROVE_OPTION){ 
           Global.filei = fileChooser.getSelectedFile();
           img_txt.setText(Global.filei.getName());     
        }
    }//GEN-LAST:event_img_btnActionPerformed

    private void AgC_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgC_btnActionPerformed
        // TODO add your handling code here:
        
        int a1 = 0 , a2 = 0 , a3 = 0, a4 = 0, a5 = 0;
        String dev = null;
        //ERROR AL AGREGAR CONTENIDO(no se creó la sala aún)
        if(Global.IdSala == 0){
            JOptionPane.showMessageDialog(rootPane, "Debes crear la sala antes de agregar Contenidos.");
        }
        //LA SALA SE CREÓ CORRECTAMENTE (comienza a validar los contenidos)
        else{
            boolean imagen = false;
            boolean video = false;
            boolean audio = false;
            boolean modelo = false;
            boolean texto = false;
            boolean error = false;
            
            //<editor-fold defaultstate="collapsed" desc="VALIDACIÓN DEL ARCHIVO DE IMAGEN">
            //IMAGEN
            if(img_chk.isSelected()){
                if(img_txt.getText().length() > 0 && img_txt.getText().length() <= 100){
                    try{
                        if(!Global.filei.exists()){
                            img_txt.setBackground(Color.pink);
                            img_txt.setToolTipText("El archivo no existe");
                            error = true;
                        }else{
                            String extension = Global.filei.getName().substring( Global.filei.getName().lastIndexOf(".") );
                            
                            if(extension.equals(".JPG") || extension.equals(".jpg") || extension.equals(".JPEG") || extension.equals(".jpeg")){
                                img_txt.setBackground(Color.white);
                                img_txt.setToolTipText(null);
                                imagen = true; 
                            }else{
                                img_txt.setBackground(Color.pink);
                                img_txt.setToolTipText("Sólo se admiten archivos de formato JPEG");
                                error = true;
                            }
                        }
                    }catch(Exception ex){
                        img_txt.setBackground(Color.pink);
                        img_txt.setToolTipText("El archivo no existe");
                        error = true;
                    }
                }else if(img_txt.getText().length() > 100){
                    img_txt.setBackground(Color.pink);
                    img_txt.setToolTipText("Nombre de archivo demasiado largo (máx. 100 caracteres)");
                    error = true;
                }else{
                    img_txt.setBackground(Color.pink);
                    img_txt.setToolTipText("Debes seleccionar un archivo");
                    error = true;
                }
            }
            //</editor-fold>
            
            //<editor-fold defaultstate="collapsed" desc="VALIDACIÓN DEL ARCHIVO DE VIDEO">
            //VIDEO
            if(vid_chk.isSelected()){
                if(vid_txt.getText().length() > 0 && vid_txt.getText().length() <= 100){
                    try{
                        if(!Global.filev.exists()){
                            vid_txt.setBackground(Color.pink);
                            vid_txt.setToolTipText("El archivo no existe");
                            error = true;
                        }else{
                            String extension = Global.filev.getName().substring( Global.filev.getName().lastIndexOf(".") );                            

                            if(extension.equals(".mov") || extension.equals(".MOV")){
                                vid_txt.setBackground(Color.white);
                                vid_txt.setToolTipText(null);
                                video = true; 
                            }else{
                                vid_txt.setBackground(Color.pink);
                                vid_txt.setToolTipText("Sólo se admiten archivos de formato MOV");
                                error = true;
                            }
                        }
                    }catch(Exception ex){
                        vid_txt.setBackground(Color.pink);
                        vid_txt.setToolTipText("El archivo no existe");
                        error = true;
                    }
                }else if(vid_txt.getText().length() > 100){
                    vid_txt.setBackground(Color.pink);
                    vid_txt.setToolTipText("Nombre de archivo demasiado largo (máx. 100 caracteres)");
                    error = true;
                }else{
                    vid_txt.setBackground(Color.pink);
                    vid_txt.setToolTipText("Debes seleccionar un archivo");
                    error = true;
                }
            }
            //</editor-fold>
            
            //<editor-fold defaultstate="collapsed" desc="VALIDACIÓN DEL ARCHIVO DE AUDIO">
            //AUDIO
            if(aud_chk.isSelected()){
                if(aud_txt.getText().length() > 0 && aud_txt.getText().length() <= 100){
                    try{
                        if(!Global.filea.exists()){
                            aud_txt.setBackground(Color.pink);
                            aud_txt.setToolTipText("El archivo no existe");
                            error = true;
                        }else{
                            String extension = Global.filea.getName().substring( Global.filea.getName().lastIndexOf(".") );                            

                            if(extension.equals(".MP3") || extension.equals(".mp3")){
                                aud_txt.setBackground(Color.white);
                                aud_txt.setToolTipText(null);
                                audio = true; 
                            }else{
                                aud_txt.setBackground(Color.pink);
                                aud_txt.setToolTipText("Sólo se admiten archivos de formato MP3");
                                error = true;
                            }
                        }
                    }catch(Exception ex){
                        aud_txt.setBackground(Color.pink);
                        aud_txt.setToolTipText("El archivo no existe");
                        error = true;
                    }
                }else if(aud_txt.getText().length() > 100){
                    aud_txt.setBackground(Color.pink);
                    aud_txt.setToolTipText("Nombre de archivo demasiado largo (máx. 100 caracteres)");
                    error = true;
                }else{
                    aud_txt.setBackground(Color.pink);
                    aud_txt.setToolTipText("Debes seleccionar un archivo");
                    error = true;
                }
            }
            //</editor-fold>
            
            //<editor-fold defaultstate="collapsed" desc="VALIDACIÓN DEL ARCHIVO DE MODELO 3D">
            //MODELO
            if(mod_chk.isSelected()){
                if(mod_txt.getText().length() > 0 && mod_txt.getText().length() <= 100){
                    try{
                        if(!Global.filem.exists()){
                            mod_txt.setBackground(Color.pink);
                            mod_txt.setToolTipText("El archivo no existe");
                            error = true;
                        }else{
                            String extension = Global.filem.getName().substring( Global.filem.getName().lastIndexOf(".") );                            

                            if(extension.equals(".PLY") || extension.equals(".ply")){
                                mod_txt.setBackground(Color.white);
                                mod_txt.setToolTipText(null);
                                modelo = true; 
                            }else{
                                mod_txt.setBackground(Color.pink);
                                mod_txt.setToolTipText("Sólo se admiten archivos de formato PLY");
                                error = true;
                            }                            
                        }
                    }catch(Exception ex){
                        mod_txt.setBackground(Color.pink);
                        mod_txt.setToolTipText("El archivo no existe");
                        error = true;
                    }
                }else if(mod_txt.getText().length() > 100){
                    mod_txt.setBackground(Color.pink);
                    mod_txt.setToolTipText("Nombre de archivo demasiado largo (máx. 100 caracteres)");
                    error = true;
                }else{
                    mod_txt.setBackground(Color.pink);
                    mod_txt.setToolTipText("Debes seleccionar un archivo");
                    error = true;
                }
            }
            //</editor-fold>
            
            //TEXTO
            if(tex_chk.isSelected()){
                if(tex_txt.getText().length() == 0){
                    tex_txt.setBackground(Color.pink);
                    tex_txt.setToolTipText("Debes completar este campo");
                    error = true;
                }else if(tex_txt.getText().length() > 4000){
                    tex_txt.setBackground(Color.pink);
                    tex_txt.setToolTipText("Texto demasiado largo (máx. 4000 caracteres)");
                    error = true;
                }else{
                    tex_txt.setBackground(Color.white);
                    tex_txt.setToolTipText(null);
                    texto = true;
                }
            }
            
            if(error == true){
                JOptionPane.showMessageDialog(rootPane, "Los Contenidos ingresados contienen errores.\nPor favor corrígelos para guardar los cambios.");
                return;
            }
            
            //<editor-fold defaultstate="collapsed" desc="SUBIR LOS CONTENIDOS SELECCIONADOS">
            //SUIR LOS CONTENIDOS SELECCIONADOS
            String resultado = "";
            
            if(imagen || video || audio || modelo || texto){
                
        boolean ñ = true;
        String Nombres = null ;
        if(Global.filei != null) {
            Nombres = Nombres + Global.filei.getName();
        }
        if(Global.filea !=null) {
            Nombres = Nombres + Global.filea.getName();
        }
        if(Global.filem != null) {
            Nombres = Nombres + Global.filem.getName();
        }
        if(Global.filev != null) {
            Nombres = Nombres + Global.filev.getName();
        }
        int f =  Nombres.length();
        String[] aC;
        aC = Nombres.split("");
        for(int i = 0; i<=f; i++){
            System.out.println(aC[i]);
             if("ñ".equals (aC[i]) || "Ñ".equals(aC[i]) || "á".equals(aC[i])|| "Á".equals(aC[i])|| "é".equals(aC[i])|| "É".equals(aC[i])|| "í".equals(aC[i])|| "Í".equals(aC[i])|| "ó".equals(aC[i])|| "Ó".equals(aC[i])|| "ú".equals(aC[i])|| "Ú".equals(aC[i]) || " ".equals(aC[i]))
             {                    
             JOptionPane.showMessageDialog(rootPane, "Los nombres de los contenidos no pueden contener la letra ñ, tildes o espacios, por favor verifíque.");
             ñ = false; 
             i = f;
             }
        }
        
        if(ñ == true)
        {
                
                //SUBIR IMAGEN
                if(imagen == true){
                    try {
                        dev = agregarContenidoSala(Global.IdSala, "imagen", Global.filei.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar la imagen.\nPor favor inténtalo de nuevo.");    
                            return;
                        }else{
                            resultado = "imagen, ";
                            FileUpload.upload(dev , Global.filei);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dev = null;
                }
                
                //SUBIR VIDEO
                if(video == true){
                    try {
                        dev = agregarContenidoSala(Global.IdSala, "video", Global.filev.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el video.\nPor favor inténtalo de nuevo.");    
                            return;
                        }else{
                            resultado = resultado + "video, ";
                            FileUpload.upload(dev, Global.filev);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dev = null;
                }
                
                //SUBIR AUDIO
                if(audio == true){
                    try {
                        System.out.println("El archivo de audio es: " + Global.filea.getName());
                        dev = agregarContenidoSala(Global.IdSala, "audio", Global.filea.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el audio.\nPor favor inténtalo de nuevo.");    
                            return;
                        }else{
                            resultado = resultado + "audio, ";
                            FileUpload.upload(dev, Global.filea);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dev = null;
                }
                
                //SUBIR MODELO
                if(modelo == true){
                    try {
                        dev = agregarContenidoSala(Global.IdSala, "modelo", Global.filem.getName());
                        if(dev.equals("-2") || dev.equals("-1")){
                            JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el modelo 3D.\nPor favor inténtalo de nuevo.");    
                            return;
                        }else{
                            resultado = resultado + "modelo, ";
                            FileUpload.upload(dev, Global.filem);
                        }
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dev = null;
                }
                
                //INSERTAR TEXTO
                if(texto == true){
                    dev = agregarContenidoSala(Global.IdSala, "texto", tex_txt.getText());
                    if(dev.equals("-2") || dev.equals("-1") ){
                        JOptionPane.showMessageDialog(rootPane, "Ocurrió un error al agregar el texto.\nPor favor inténtalo de nuevo.");    
                        return;
                    }else{
                        resultado = resultado + "texto, ";
                    }
                }
                
                //FIN DE LA OPERACIÓN
                if( a1 == 0 && a2 == 0 && a3 == 0 && a4 == 0 && a5 == 0 && nom_txt.getText().equals("")){
                    JOptionPane.showMessageDialog(rootPane, "Debes crear una Sala para agregarle Contenidos."); 
                }else{
//                  agregar condicion de or entre los booleanos de los checkboxes
                    if(resultado.length() > 0){
                        if(JOptionPane.showConfirmDialog(this, "Los Contenidos: " + resultado + "se agregaron correctamente.\n¿Deseas agregar otra Sala?") == JOptionPane.YES_OPTION){
                            Global.IdSala = -1;
                            Global.filea = null;
                            Global.filei = null;
                            Global.filem = null;
                            Global.filev = null;
                            Global.nomSala = null;
                            HabilitarFormSala();
                            nom_txt.setText(null);
                            des_txt.setText(null);
                            id_sa.setText("-");
                            DeshabilitarFormContenido();
                        }else{
                            Global.IdSala = -1;
                            Global.filea = null;
                            Global.filei = null;
                            Global.filem = null;
                            Global.filev = null;
                            Global.nomSala = null;
                            this.dispose();
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Ocurrieron errores al agregar Contenidos.\nPor favor inténtalo de nuevo.");
                    }
                }
        }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debes agregar al menos un tipo de Contenido para la Sala.\nSi no deseas agregar Contenido presiona Cancelar.");
            }
            //</editor-fold>          
                               
            //Aca estaba
        }
    }//GEN-LAST:event_AgC_btnActionPerformed

    private void AgregarS_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarS_btnActionPerformed
        // TODO add your handling code here:
        
        // <editor-fold defaultstate="collapsed" desc="VALIDACIÓN DE LOS DATOS DE LA SALA">
        boolean errorValidSala = false;
        Global.nomSala = nom_txt.getText();
        String DesS = des_txt.getText();
        
        //NOMBRE
        if(nom_txt.getText().equals("")){
            errorValidSala = true;
            nom_txt.setBackground(Color.pink);
            nom_txt.setToolTipText("Debes completar este campo");
        }else if(nom_txt.getText().length() > 200){
            errorValidSala = true;
            nom_txt.setBackground(Color.pink);
            nom_txt.setToolTipText("El texto excede el máximo de 200 caracteres");        
        }else{
            nom_txt.setBackground(Color.white);
            nom_txt.setToolTipText(null);
        }
        
        //DESCRIPCION
        if(des_txt.getText().equals("")){
            errorValidSala = true;
            des_txt.setBackground(Color.pink);
            des_txt.setToolTipText("Debes completar este campo");
        }else if(des_txt.getText().length() > 3000){
            errorValidSala = true;
            des_txt.setBackground(Color.pink);
            des_txt.setToolTipText("El texto excede el máximo de 3000 caracteres");        
        }else{
            des_txt.setBackground(Color.white);
            des_txt.setToolTipText(null);
        }
        // </editor-fold>
        
        if(errorValidSala == false){
            //Da de alta la sala y guarda el resultado de la operación
            try{
                Global.IdSala = altaSala(Global.nomSala, DesS);
            }catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Error al comunicarse con el servidor.\nInténtalo de nuevo.");
            }
            //Muestra el ID de la sala creada
            id_sa.setText(Integer.toString(Global.IdSala));
            
            // <editor-fold defaultstate="collapsed" desc="LA SALA YA EXISTE">
            if(Global.IdSala == -1){
                nom_txt.setBackground(Color.pink);
                nom_txt.setToolTipText("El nombre de la Sala ya existe");
                JOptionPane.showMessageDialog(null, "El nombre de la Sala ya existe en el sistema.\nPor favor intenta con otro diferente.");
            }
            //</editor-fold>
            
            // <editor-fold defaultstate="collapsed" desc="DEBE CREAR LA SALA ANTES DE GENERAR EL QR">
            else if(Global.IdSala == 0){
                    JOptionPane.showMessageDialog(null, "Debe crear la sala antes de generar su código QR");
            }
            //</editor-fold>
            
            //<editor-fold defaultstate="collapsed" desc="SALA CREADA CON ÉXITO">
            else{
                JOptionPane.showMessageDialog(rootPane, "La Sala se creó con éxito");
                
                // <editor-fold defaultstate="collapsed" desc="GENERACIÓN DE CÓDIGO QR">
                try {
                    int udm = 0; 
                    int resolucion = 72; 
                    float margenIzq = 5.000f; 
                    float margenDer = 5.000f; 
                    float margenSup = 5.000f; 
                    float margenInf = 5.000f; 
                    int rotacion = 0; 
                    float tamanoModulo = 8.000f;

                    QRCode codigoQR = new QRCode(); 
                    codigoQR.setData(Integer.toString(Global.IdSala));
                    codigoQR.setDataMode(QRCode.MODE_BYTE);
                    codigoQR.setUOM(udm); 
                    codigoQR.setLeftMargin(margenIzq); 
                    codigoQR.setResolution(resolucion); 
                    codigoQR.setRightMargin(margenDer); 
                    codigoQR.setTopMargin(margenSup); 
                    codigoQR.setBottomMargin(margenInf); 
                    codigoQR.setRotate(rotacion); 
                    codigoQR.setModuleSize(tamanoModulo);

                    String archivo =  "qr.gif"; 
                    codigoQR.renderBarcode(archivo);
                    //-2 no encuentra sala, -1 error, 0 bien
                    BufferedImage Image = ImageIO.read(new File (Global.directorioLocal + "\\qr.gif")); 
                    ImageIcon img  = new ImageIcon(Image);
                    File fileqr = new File (Global.directorioLocal + "\\qr.gif");
                    Global.fileInputStream = new FileInputStream(fileqr);
                    String q = setQr(Global.IdSala, fileqr.getName());
                    if(q.equals("-2") || q.equals("-1")){
                        //ERROR AL GENERAR EL CÓDIGO
                        JOptionPane.showMessageDialog(null, "Ocurrió un error al generar el Código QR.\nInténtalo de nuevo.");
                    }else{
                        //SUBIR CÓDIGO QR AL SERVIDOR
                        qr_lbl.setIcon(img);            
                        FileUpload.upload(q, fileqr);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(AltaSala.class.getName()).log(Level.SEVERE, null, ex);
                }
                //</editor-fold>
                
                // <editor-fold defaultstate="collapsed" desc="¿AGREGAR CONTENIDO?">
                //SI (habilitar form contenido)
                if(JOptionPane.showConfirmDialog(rootPane, "¿Deseas agregar Contenido a la Sala?") == JOptionPane.YES_OPTION){
                    //DESHABILITAR ALTA DE SALA (cuando ya fue creada)
                    DeshabilitarFormSala();
                    //HABILITAR AGREGADO DE CONTENIDOS
                    HabilitarFormContenido();
                    imprimir_codigo_btn.setEnabled(true);
                }
                
                //NO (preguntar por nueva sala)
                else{
                    imprimir_codigo_btn.setEnabled(true);
                    // <editor-fold defaultstate="collapsed" desc="¿NUEVA SALA?">
                    //SI (inicializar formulario)
                    if(JOptionPane.showConfirmDialog(rootPane, "¿Quieres crear una nueva Sala?") == JOptionPane.YES_OPTION){
                        HabilitarFormSala();
                        DeshabilitarFormContenido();
                    }
                    //NO (cerrar ventana)
                    else{
                        this.dispose();
                    }
                    //</editor-fold>
                }
                //</editor-fold>
            }
            //</editor-fold>
        }
        else{
            //ERRORES DE VALIDACIÓN DE DATOS DE SALA
            JOptionPane.showMessageDialog(rootPane, "Debes corregir los errores para guardar los datos.", "Error en el formulario", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_AgregarS_btnActionPerformed

    private void Cancelar_SalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancelar_SalaActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "¿Cerrar ventana de creación?\nSe perderá cualquier cambio no guardado.") == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_Cancelar_SalaActionPerformed

    private void Cancelar_ContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancelar_ContActionPerformed
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="¿CANCELAR CONTENIDO?">
        //SI (preguntar por nueva sala)
        if(JOptionPane.showConfirmDialog(rootPane, "¿Deseas dejar la Sala sin Contenido asignado?\nSe perderá cualquier cambio no guardado.") == JOptionPane.YES_OPTION){
            // <editor-fold defaultstate="collapsed" desc="¿NUEVA SALA?">
            //SI (inicializar formulario)
            if(JOptionPane.showConfirmDialog(rootPane, "¿Quieres crear una nueva Sala?") == JOptionPane.YES_OPTION){
                HabilitarFormSala();
                DeshabilitarFormContenido();
            }
            //NO (cerrar ventana)
            else{
                this.dispose();
            }
            //</editor-fold>
        }
    }//GEN-LAST:event_Cancelar_ContActionPerformed

    private void vid_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vid_btnActionPerformed
        // TODO add your handling code here:
        this.setAlwaysOnTop(false);
        JFileChooser fileChooser = new JFileChooser();
       // FileNameExtensionFilter filtro = new FileNameExtensionFilter("MOV", "mov");
        fileChooser.setDialogTitle("Ubicación del archivo resultante.");
       // fileChooser.setFileFilter(filtro);        
        int result = fileChooser.showOpenDialog(rootPane);
        
        if(result == JFileChooser.APPROVE_OPTION){ 
            Global.filev = fileChooser.getSelectedFile();
            vid_txt.setText(Global.filev.getName());   
        }
    }//GEN-LAST:event_vid_btnActionPerformed

    private void aud_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aud_btnActionPerformed
        // TODO add your handling code here:
        this.setAlwaysOnTop(false);
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("MP3", "mp3");
        fileChooser.setDialogTitle("Ubicación del archivo resultante.");
        fileChooser.setFileFilter(filtro);
        int result = fileChooser.showOpenDialog(rootPane);
        
        if(result == JFileChooser.APPROVE_OPTION){ 
           Global.filea = fileChooser.getSelectedFile();
           aud_txt.setText(Global.filea.getName());
        }
    }//GEN-LAST:event_aud_btnActionPerformed

    private void mod_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mod_btnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("PLY", "ply");
        fileChooser.setDialogTitle("Ubicación del archivo resultante.");
        fileChooser.setFileFilter(filtro);
        int result = fileChooser.showOpenDialog(rootPane);
        
        if(result == JFileChooser.APPROVE_OPTION){ 
            Global.filem = fileChooser.getSelectedFile();
            mod_txt.setText(Global.filem.getName());
        }
    }//GEN-LAST:event_mod_btnActionPerformed

    private void imprimir_codigo_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimir_codigo_btnActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "¿Imprimir el Código QR generado?\nSe enviará 1 copia a la impresora.") == JOptionPane.YES_OPTION){
            System.out.println("entro1");
            if( Global.fileInputStream != null ){
                System.out.println("entro");
                try {
                    System.out.println("entro2");
                    //atributos de la impresora
                    PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
                    pras.add(new Copies(1));
                    //Impresora configurada del sistema
                    PrintService ps = PrintServiceLookup.lookupDefaultPrintService();

                    DocPrintJob docPrintJob = ps.createPrintJob();
                    Doc doc = new SimpleDoc(Global.fileInputStream, DocFlavor.INPUT_STREAM.GIF, null);
                    docPrintJob.print(doc, pras);
                    Global.fileInputStream.close();
                } catch (PrintException ex) {
                    System.out.println(ex);
                } catch (IOException ex) {
                    System.out.println(ex);
                }  finally {
                    try {
                        Global.fileInputStream.close();
                    } catch (IOException ex) {
                        System.out.println(ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_imprimir_codigo_btnActionPerformed

    private void img_chkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_img_chkActionPerformed
        // TODO add your handling code here:
        if(img_chk.isSelected()){
            img_txt.setText(null);
            img_txt.setToolTipText(null);
            img_txt.setBackground(Color.white);
            img_txt.setEnabled(true);
            img_btn.setEnabled(true);
            img_ver_btn.setEnabled(true);
        }else{
            img_txt.setText(null);
            img_txt.setToolTipText(null);
            img_txt.setBackground(Color.white);
            img_txt.setEnabled(false);
            img_btn.setEnabled(false);
            img_ver_btn.setEnabled(false);
        }
    }//GEN-LAST:event_img_chkActionPerformed

    private void vid_chkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vid_chkActionPerformed
        // TODO add your handling code here:
        if(vid_chk.isSelected()){
            vid_txt.setText(null);
            vid_txt.setToolTipText(null);
            vid_txt.setBackground(Color.white);
            vid_txt.setEnabled(true);
            vid_btn.setEnabled(true);
            vid_ver_btn.setEnabled(false);
        }else{
            vid_txt.setText(null);
            vid_txt.setToolTipText(null);
            vid_txt.setBackground(Color.white);
            vid_txt.setEnabled(false);
            vid_btn.setEnabled(false);
            vid_ver_btn.setEnabled(false);
        }
    }//GEN-LAST:event_vid_chkActionPerformed

    private void aud_chkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aud_chkActionPerformed
        // TODO add your handling code here:
        if(aud_chk.isSelected()){
            aud_txt.setText(null);
            aud_txt.setToolTipText(null);
            aud_txt.setBackground(Color.white);
            aud_txt.setEnabled(true);
            aud_btn.setEnabled(true);
            aud_ver_btn.setEnabled(false);
        }else{
            aud_txt.setText(null);
            aud_txt.setToolTipText(null);
            aud_txt.setBackground(Color.white);
            aud_txt.setEnabled(false);
            aud_btn.setEnabled(false);
            aud_ver_btn.setEnabled(false);
        }
    }//GEN-LAST:event_aud_chkActionPerformed

    private void mod_chkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mod_chkActionPerformed
        // TODO add your handling code here:
        if(mod_chk.isSelected()){
            mod_txt.setText(null);
            mod_txt.setToolTipText(null);
            mod_txt.setBackground(Color.white);
            mod_txt.setEnabled(true);
            mod_btn.setEnabled(true);
            mod_ver_btn.setEnabled(true);
        }else{
            mod_txt.setText(null);
            mod_txt.setToolTipText(null);
            mod_txt.setBackground(Color.white);
            mod_txt.setEnabled(false);
            mod_btn.setEnabled(false);
            mod_ver_btn.setEnabled(false);
        }
    }//GEN-LAST:event_mod_chkActionPerformed

    private void tex_chkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tex_chkActionPerformed
        // TODO add your handling code here:
        if(tex_chk.isSelected()){
            tex_txt.setText(null);
            tex_txt.setToolTipText(null);
            tex_txt.setBackground(Color.white);
            tex_txt.setEnabled(true);
        }else{
            tex_txt.setText(null);
            tex_txt.setToolTipText(null);
            tex_txt.setBackground(Color.white);
            tex_txt.setEnabled(false);
        }
    }//GEN-LAST:event_tex_chkActionPerformed

    private void img_ver_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_img_ver_btnActionPerformed
        // TODO add your handling code here:
        if(img_txt.getText().length() > 0){
            try {
                ImageIcon img = new ImageIcon (Global.filei.toURL());   
                int h = img.getIconHeight();
                int w = img.getIconWidth();
                Global.lab.setSize(w, h);
                Global.lab.setIcon(img);
                ImagenLabel il = new ImagenLabel();
                il.setSize(w, h);
                il.setVisible(true);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Modificar_sala.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debes seleccionar un archivo para visualizarlo.");
        }
    }//GEN-LAST:event_img_ver_btnActionPerformed

    private void vid_ver_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vid_ver_btnActionPerformed
        // TODO add your handling code here:
        if(vid_txt.getText().length() > 0){
         
           Global.fvid = Global.filev; 
        
            if ( Global.fvid != null ){
             prbQT frame = new prbQT("Simple QTJ Player"); 
             frame.pack(); 
             frame.setVisible(true); 
        try { 
            frame.movie.start(); 
        } catch (Exception e) { 
            e.printStackTrace(); 
        }  
            }else{
                JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debes seleccionar un archivo para visualizarlo.");
        }
    
    }//GEN-LAST:event_vid_ver_btnActionPerformed

    private void aud_ver_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aud_ver_btnActionPerformed
        // TODO add your handling code here:
        if(aud_txt.getText().length() > 0){    
            MediaPanelAudio mediaPanel = null;  
            URL mediaURL = null;
            try{
                mediaURL = Global.filea.toURL();
            }catch ( MalformedURLException malformedURLException ){
                System.err.println( "No se pudo crear la URL" );
            }

            if ( mediaURL != null ){
                mediaPanel = new MediaPanelAudio( mediaURL );
            }else{
                JOptionPane.showMessageDialog(rootPane, "El archivo que has seleccionado no está disponible.");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecciona un archivo para visualizarlo.");
        }
    }//GEN-LAST:event_aud_ver_btnActionPerformed

    private void mod_ver_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mod_ver_btnActionPerformed
        // TODO add your handling code here:
        if(mod_txt.getText().length() > 0){
            vtkRenderer render = new vtkRenderer();
            vtkRenderWindow renderWindow = new vtkRenderWindow();
            renderWindow.AddRenderer(render);
            vtkRenderWindowInteractor renderWindowInteractor = new vtkRenderWindowInteractor();
            renderWindowInteractor.SetRenderWindow(renderWindow);
            vtkPLYReader mod = new vtkPLYReader();
            mod.SetFileName(Global.filem.getAbsolutePath());
            mod.Update();
            vtkElevationFilter colorIt = new vtkElevationFilter();
            colorIt.SetInput(mod.GetOutput());
            colorIt.SetLowPoint(0, 0, -1);
            colorIt.SetHighPoint(0, 0, 1);
            vtkPolyDataMapper point = new vtkPolyDataMapper();
            point.SetInputConnection(mod.GetOutputPort());
            vtkActor actor = new vtkActor();
            actor.SetMapper(point);
            render.AddActor(actor);
            render.SetBackground(1, 1, 1); 
            renderWindow.SetSize(500, 500);
            renderWindow.SetPosition(450, 200);
            renderWindow.Render();
            renderWindowInteractor.Start();
            render.Delete();
            renderWindow.Delete();
            renderWindowInteractor.Delete();
            mod.Delete();
            colorIt.Delete();
            actor.Delete();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecciona un archivo para visualizarlo.");
        }
    }//GEN-LAST:event_mod_ver_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaSala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaSala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaSala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaSala.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaSala().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgC_btn;
    private javax.swing.JButton AgregarS_btn;
    private javax.swing.JButton Cancelar_Cont;
    private javax.swing.JButton Cancelar_Sala;
    private javax.swing.JScrollPane JScrollPane2;
    private javax.swing.JPanel Panel1;
    private javax.swing.JLabel Titulo_Cont;
    private javax.swing.JLabel Titulo_Sala;
    private javax.swing.JButton aud_btn;
    private javax.swing.JCheckBox aud_chk;
    private javax.swing.JTextField aud_txt;
    private javax.swing.JToggleButton aud_ver_btn;
    private javax.swing.JTextArea des_txt;
    private javax.swing.JLabel id_sa;
    private javax.swing.JLabel idl;
    private javax.swing.JLabel idl1;
    private javax.swing.JToggleButton img_btn;
    private javax.swing.JCheckBox img_chk;
    private javax.swing.JTextField img_txt;
    private javax.swing.JToggleButton img_ver_btn;
    private javax.swing.JButton imprimir_codigo_btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mod_btn;
    private javax.swing.JCheckBox mod_chk;
    private javax.swing.JTextField mod_txt;
    private javax.swing.JToggleButton mod_ver_btn;
    private javax.swing.JTextField nom_txt;
    private javax.swing.JLabel qr_lbl;
    private javax.swing.JCheckBox tex_chk;
    private javax.swing.JTextArea tex_txt;
    private javax.swing.JButton vid_btn;
    private javax.swing.JCheckBox vid_chk;
    private javax.swing.JTextField vid_txt;
    private javax.swing.JToggleButton vid_ver_btn;
    // End of variables declaration//GEN-END:variables

    
    private static String agregarContenidoSala(int idSala, java.lang.String tipo, java.lang.String nombre) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.agregarContenidoSala(idSala, tipo, nombre);
    }

    private static String setQr(int idSala, java.lang.String qr) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.setQr(idSala, qr);
    }

    private static int altaSala(java.lang.String nombreSala, java.lang.String descripcionSala) {
        _109._2._0._10.server_php.Comision service = new _109._2._0._10.server_php.Comision();
        _109._2._0._10.server_php.ComisionPortType port = service.getComisionPort();
        return port.altaSala(nombreSala, descripcionSala);
    }

    private void HabilitarFormSala(){
        AgregarS_btn.setEnabled(true);
        Cancelar_Sala.setEnabled(true);
        nom_txt.setEnabled(true);
        nom_txt.setText(null);
        nom_txt.setBackground(Color.white);
        des_txt.setEnabled(true);
        des_txt.setText(null);
        des_txt.setBackground(Color.white);
        id_sa.setText("-");
        qr_lbl.setIcon(null);
        imprimir_codigo_btn.setEnabled(false);
    }
    
    private void DeshabilitarFormSala(){
        AgregarS_btn.setEnabled(false);
        Cancelar_Sala.setEnabled(false);
        nom_txt.setEnabled(false);
        des_txt.setEnabled(false);
        nom_txt.setBackground(Color.white);
        des_txt.setBackground(Color.white);
        imprimir_codigo_btn.setEnabled(true);
    }
    
    private void HabilitarFormContenido(){
        //IMAGEN
        img_chk.setEnabled(true);
        img_txt.setEnabled(false);
        img_txt.setText(null);
        img_txt.setToolTipText(null);
        img_txt.setBackground(Color.white);
        img_btn.setEnabled(false);
        img_ver_btn.setEnabled(false);

        //VIDEO
        vid_chk.setEnabled(true);
        vid_txt.setEnabled(false);
        vid_txt.setText(null);
        vid_txt.setToolTipText(null);
        vid_txt.setBackground(Color.white);
        vid_btn.setEnabled(false);
        vid_ver_btn.setEnabled(false);

        //AUDIO
        aud_chk.setEnabled(true);
        aud_txt.setEnabled(false);
        aud_txt.setText(null);
        aud_txt.setToolTipText(null);
        aud_txt.setBackground(Color.white);
        aud_btn.setEnabled(false);
        aud_ver_btn.setEnabled(false);

        //MODELO 3D
        mod_chk.setEnabled(false);
        mod_txt.setEnabled(false);
        mod_txt.setText(null);
        mod_txt.setToolTipText(null);
        mod_txt.setBackground(Color.white);
        mod_btn.setEnabled(false);
        mod_ver_btn.setEnabled(false);

        //TEXTO
        tex_chk.setEnabled(false);
        tex_txt.setEnabled(false);
        tex_txt.setText(null);
        tex_txt.setToolTipText(null);
        tex_txt.setBackground(Color.white);

        AgC_btn.setEnabled(true);
        Cancelar_Cont.setEnabled(true);
        imprimir_codigo_btn.setEnabled(true);
    }
    
    private void DeshabilitarFormContenido(){
        //IMAGEN
        img_chk.setEnabled(false);
        img_chk.setSelected(false);
        img_txt.setEnabled(false);
        img_txt.setBackground(Color.white);
        img_txt.setText(null);
        img_txt.setToolTipText(null);
        img_btn.setEnabled(false);
        img_ver_btn.setEnabled(false);
        
        //VIDEO
        vid_chk.setEnabled(false);
        vid_chk.setSelected(false);
        vid_txt.setEnabled(false);
        vid_txt.setBackground(Color.white);
        vid_txt.setText(null);
        vid_txt.setToolTipText(null);
        vid_btn.setEnabled(false);
        vid_ver_btn.setEnabled(false);

        //AUDIO
        aud_chk.setEnabled(false);
        aud_chk.setSelected(false);
        aud_txt.setEnabled(false);
        aud_txt.setBackground(Color.white);
        aud_txt.setText(null);
        aud_txt.setToolTipText(null);
        aud_btn.setEnabled(false);
        aud_ver_btn.setEnabled(false);
        
        //MODELO 3D
        mod_chk.setEnabled(false);
        mod_chk.setSelected(false);
        mod_txt.setEnabled(false);
        mod_txt.setBackground(Color.white);
        mod_txt.setText(null);
        mod_txt.setToolTipText(null);
        mod_btn.setEnabled(false);
        mod_ver_btn.setEnabled(false);

        //TEXTO
        tex_chk.setEnabled(false);
        tex_chk.setSelected(false);
        tex_txt.setEnabled(false);
        tex_txt.setBackground(Color.white);
        tex_txt.setText(null);
        tex_txt.setToolTipText(null);

        //QR
        AgC_btn.setEnabled(false);
        Cancelar_Cont.setEnabled(false);
        imprimir_codigo_btn.setEnabled(false);
    }
    
    private void CambiarImagenLabel(File path, JLabel label){
        BufferedImage read = null;
        try {
            read = ImageIO.read(path);
        } catch (IOException ex) {
            Logger.getLogger(ListarObra2.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        //mostrar la imagen sin perder la relacion de aspecto
        float height = (float)read.getHeight();
        float width = (float)read.getWidth();
        float maxH = (float) 180;
        float maxV = (float) 180;
        float relacion = 1;
        
        if(height > width){ //imagen vertical
            relacion = height / maxV;
        }else if(width > height){ //imagen horizontal
            relacion =  width / maxH;
        }else{ //imagen cuadrada
            relacion = height / maxV;
        }
        
        //Image scaledInstance = read.getScaledInstance(290, 230, Image.SCALE_DEFAULT);
        Image scaledInstance = read.getScaledInstance((int)(width/relacion), (int)(height/relacion), Image.SCALE_DEFAULT);
        //im.getImage().flush();
        label.setIcon(new ImageIcon(scaledInstance));
    }

}
